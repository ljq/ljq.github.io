<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jack Liu Personal Site (ljq@GitHub).安全贯穿于软件开发各个环节.</title>
  
  <subtitle>Jack Liu Personal Site (ljq@GitHub)</subtitle>
  <link href="https://www.defense.ink/atom.xml" rel="self"/>
  
  <link href="https://www.defense.ink/"/>
  <updated>2024-03-27T16:57:08.893Z</updated>
  <id>https://www.defense.ink/</id>
  
  <author>
    <name>Jack Liu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://www.defense.ink/0.html"/>
    <id>https://www.defense.ink/0.html</id>
    <published>2024-03-27T16:51:01.000Z</published>
    <updated>2024-03-27T16:57:08.893Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><h6 id="文章原文地址：https-paulgraham-com-google-html-（作者：保罗格雷厄姆）"><a href="#文章原文地址：https-paulgraham-com-google-html-（作者：保罗格雷厄姆）" class="headerlink" title="文章原文地址：https://paulgraham.com/google.html （作者：保罗格雷厄姆）"></a>文章原文地址：<a href="https://paulgraham.com/google.html">https://paulgraham.com/google.html</a> （作者：保罗格雷厄姆）</h6><h3 id="《如何创建一家像谷歌一样的公司》（How-to-start-Google）"><a href="#《如何创建一家像谷歌一样的公司》（How-to-start-Google）" class="headerlink" title="《如何创建一家像谷歌一样的公司》（How to start Google）"></a>《如何创建一家像谷歌一样的公司》（How to start Google）</h3><p>2024 年 3 月</p><h5 id="（这是我给14岁和15岁的孩子们做的演讲，内容是如果他们以后想要创业的话现在该怎么做。很多学校认为他们应该告诉学生一些关于创业的事情。这就是我认为他们应该告诉他们的。-）"><a href="#（这是我给14岁和15岁的孩子们做的演讲，内容是如果他们以后想要创业的话现在该怎么做。很多学校认为他们应该告诉学生一些关于创业的事情。这就是我认为他们应该告诉他们的。-）" class="headerlink" title="（这是我给14岁和15岁的孩子们做的演讲，内容是如果他们以后想要创业的话现在该怎么做。很多学校认为他们应该告诉学生一些关于创业的事情。这就是我认为他们应该告诉他们的。 ）"></a>（这是我给14岁和15岁的孩子们做的演讲，内容是如果他们以后想要创业的话现在该怎么做。很多学校认为他们应该告诉学生一些关于创业的事情。这就是我认为他们应该告诉他们的。 ）</h5><p>你们中的大多数人可能认为，当您被释放到所谓的现实世界中时，您最终将不得不找到某种工作。 这不是真的，今天我要谈谈一个可以用来避免找工作的技巧。</p><p>诀窍是创办自己的公司。 所以这并不是逃避工作的伎俩，因为如果你创办自己的公司，你会比从事普通工作时更加努力。 但你会避免工作带来的许多烦人的事情，包括老板告诉你该做什么。</p><p>从事自己的项目比从事别人的项目更令人兴奋。 而且你还可以变得更加富有。 事实上，这是真正致富的标准方式。 如果你看一下偶尔在媒体上公布的最富有的人名单，你会发现几乎所有人都是通过创办自己的公司来实现这一目标的。</p><p>创办自己的公司可以意味着任何事情，从创办理发店到创办谷歌。 我来这里是要谈谈这个连续体的一个极端。 我将告诉您如何启动 Google。</p><p>位于谷歌连续体末端的公司在年轻时被称为初创公司。 我之所以了解他们，是因为我和妻子杰西卡创办了一家名为 Y Combinator 的公司，它基本上是一家初创工厂。 自 2005 年以来，Y Combinator 已资助了 4000 多家初创公司。 因此，我们确切地知道您创办一家初创公司需要什么，因为我们在过去 19 年里一直在帮助人们做到这一点。</p><p>当我说我要告诉你如何启动 Google 时，你可能认为我在开玩笑。 您可能会想“我们怎样才能启动 Google？” 但这实际上就是那些创建谷歌的人在创建之前所想的。 如果你告诉谷歌创始人拉里·佩奇和谢尔盖·布林，他们即将创办的公司有一天将价值超过一万亿美元，他们的脑袋一定会爆炸。</p><p>当你开始创业时，你所能知道的就是它似乎值得追求。 你不知道它会变成一家价值数十亿的公司还是一家倒闭的公司。 因此，当我说我要告诉你如何创办谷歌时，我的意思是我要告诉你如何才能创办一家像谷歌一样有机会成为谷歌的公司。 谷歌。 [1]</p><p>你如何从现在的状态发展到可以成功创业的地步？ 你需要三件事。 你需要擅长某种技术，你需要对你要构建的东西有一个想法，你需要联合创始人来创办公司。</p><p>如何才能擅长技术？ 您如何选择擅长哪种技术？ 这两个问题都有相同的答案：致力于自己的项目。 不要试图猜测基因编辑、法学硕士或火箭是否会成为最有价值的技术。 没有人能预测这一点。 只做你最感兴趣的事情。 你会在你感兴趣的事情上比你正在做的事情更加努力，因为你认为你应该这样做。</p><p>如果您不确定要擅长什么技术，那就擅长编程。 这一直是过去 30 年初创企业中位数的来源，而且在未来 10 年可能不会改变。</p><p>那些在学校上计算机科学课程的人此时可能会想，好吧，我们已经解决了这个问题。 我们已经被教授了所有关于编程的知识。 但抱歉，这还不够。 你必须致力于自己的项目，而不仅仅是在课堂上学习东西。 您可以在计算机科学课程上取得好成绩，而无需真正学习编程。 事实上，你可以从顶尖大学获得计算机科学学位，但仍然不擅长编程。 这就是为什么科技公司在雇用你之前都会让你参加编码测试，无论你在哪里上的大学或者你在那里表现得如何。 他们知道成绩和考试结果不能证明什么。</p><p>如果你真的想学习编程，你就必须从事自己的项目。 这样你学得更快。 想象一下，您正在编写一款游戏，并且您想要在其中执行某些操作，但您不知道如何执行。 你会发现比在课堂上学习任何东西要快得多。</p><p>不过，您不必学习编程。 如果您想知道什么才算技术，它几乎包括您可以使用“制造”或“构建”一词描述的所有内容。 所以焊接、制作衣服、制作视频都算数。 无论你对什么最感兴趣。关键的区别在于你是在生产还是只是在消费。 您是在编写电脑游戏，还是只是玩游戏？ 这就是截止点。</p><p>苹果公司的创始人史蒂夫·乔布斯（Steve Jobs）在青少年时期就花时间学习书法——那种美丽的书法。</p><h6 id="文章原文地址：https-paulgraham-com-google-html"><a href="#文章原文地址：https-paulgraham-com-google-html" class="headerlink" title="文章原文地址：https://paulgraham.com/google.html"></a>文章原文地址：<a href="https://paulgraham.com/google.html">https://paulgraham.com/google.html</a></h6>]]></content>
    
    
      
      
    <summary type="html">&lt;!-- toc --&gt;

&lt;h6 id=&quot;文章原文地址：https-paulgraham-com-google-html-（作者：保罗格雷厄姆）&quot;&gt;&lt;a href=&quot;#文章原文地址：https-paulgraham-com-google-html-（作者：保罗格雷厄姆）&quot; cl</summary>
      
    
    
    
    <category term="reprinted-articles" scheme="https://www.defense.ink/categories/reprinted-articles/"/>
    
    
    <category term="Google" scheme="https://www.defense.ink/tags/Google/"/>
    
  </entry>
  
  <entry>
    <title>WDFT (Warped Discrete Fourier Transform)</title>
    <link href="https://www.defense.ink/e324f38b.html"/>
    <id>https://www.defense.ink/e324f38b.html</id>
    <published>2024-02-17T01:02:00.000Z</published>
    <updated>2024-02-17T06:39:47.108Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><h3 id="WDFT-Warped-Discrete-Fourier-Transform-by-Go"><a href="#WDFT-Warped-Discrete-Fourier-Transform-by-Go" class="headerlink" title="WDFT (Warped Discrete Fourier Transform) by Go"></a>WDFT (Warped Discrete Fourier Transform) by Go</h3><h5 id="Implementation-of-Go-language"><a href="#Implementation-of-Go-language" class="headerlink" title="Implementation of Go language:"></a>Implementation of Go language:</h5><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import (</span><br><span class="line">&quot;fmt&quot;</span><br><span class="line">&quot;math&quot;</span><br><span class="line">&quot;math/cmplx&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">// 定义扭曲函数，这里以幂函数为例</span><br><span class="line">func distortionFunction(omega float64) float64 &#123;</span><br><span class="line">return math.Pow(omega, 1.5) // 可根据需要修改扭曲函数</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 离散傅里叶变换</span><br><span class="line">func dft(signal []float64) []complex128 &#123;</span><br><span class="line">N := len(signal)</span><br><span class="line">result := make([]complex128, N)</span><br><span class="line"></span><br><span class="line">for k := 0; k &lt; N; k++ &#123;</span><br><span class="line">var sum complex128</span><br><span class="line">for n := 0; n &lt; N; n++ &#123;</span><br><span class="line">omega := -2 * math.Pi * float64(k*n) / float64(N)</span><br><span class="line">sum += complex(signal[n], 0) * cmplx.Exp(complex(0, omega))</span><br><span class="line">&#125;</span><br><span class="line">result[k] = sum</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return result</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 扭曲离散傅里叶变换</span><br><span class="line">func wdft(signal []float64) []complex128 &#123;</span><br><span class="line">N := len(signal)</span><br><span class="line">spectrum := dft(signal)</span><br><span class="line"></span><br><span class="line">for k := 0; k &lt; N; k++ &#123;</span><br><span class="line">omega := 2 * math.Pi * float64(k) / float64(N)</span><br><span class="line">warpedOmega := distortionFunction(omega)</span><br><span class="line">spectrum[k] *= cmplx.Exp(complex(0, warpedOmega))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return spectrum</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 反离散傅里叶变换</span><br><span class="line">func idft(spectrum []complex128) []float64 &#123;</span><br><span class="line">N := len(spectrum)</span><br><span class="line">result := make([]float64, N)</span><br><span class="line"></span><br><span class="line">for n := 0; n &lt; N; n++ &#123;</span><br><span class="line">var sum complex128</span><br><span class="line">for k := 0; k &lt; N; k++ &#123;</span><br><span class="line">omega := 2 * math.Pi * float64(k*n) / float64(N)</span><br><span class="line">sum += spectrum[k] * cmplx.Exp(complex(0, omega))</span><br><span class="line">&#125;</span><br><span class="line">result[n] = real(sum) / float64(N)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return result</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">// 生成一个简单的示例信号</span><br><span class="line">signal := make([]float64, 8)</span><br><span class="line">for i := range signal &#123;</span><br><span class="line">signal[i] = float64(i)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 进行WDFT变换</span><br><span class="line">spectrum := wdft(signal)</span><br><span class="line"></span><br><span class="line">// 对频域表示进行处理（这里省略具体处理步骤）</span><br><span class="line"></span><br><span class="line">// 进行反离散傅里叶变换</span><br><span class="line">outputSignal := idft(spectrum)</span><br><span class="line"></span><br><span class="line">// 输出结果</span><br><span class="line">fmt.Println(&quot;原始信号：&quot;, signal)</span><br><span class="line">fmt.Println(&quot;经过WDFT变换后的信号：&quot;, outputSignal)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Implementation-of-Rust-language"><a href="#Implementation-of-Rust-language" class="headerlink" title="Implementation of Rust language:"></a>Implementation of Rust language:</h5><p><strong>Cargo.toml</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[dependencies]</span><br><span class="line">num = &quot;0.4&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">use std::f64::consts::PI;</span><br><span class="line">use num::complex::Complex;</span><br><span class="line"></span><br><span class="line">// 定义扭曲函数</span><br><span class="line">fn distortion_function(omega: f64) -&gt; f64 &#123;</span><br><span class="line">    omega.powf(1.5) // 可根据需要修改扭曲函数</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 离散傅里叶变换</span><br><span class="line">fn dft(signal: &amp;[f64]) -&gt; Vec&lt;Complex&lt;f64&gt;&gt; &#123;</span><br><span class="line">    let n = signal.len();</span><br><span class="line">    let mut spectrum = vec![Complex::new(0.0, 0.0); n];</span><br><span class="line"></span><br><span class="line">    for k in 0..n &#123;</span><br><span class="line">        let mut sum = Complex::new(0.0, 0.0);</span><br><span class="line">        for n in 0..n &#123;</span><br><span class="line">            let omega = -2.0 * PI * k as f64 * n as f64 / n as f64;</span><br><span class="line">            sum += Complex::new(signal[n], 0.0) * Complex::from_polar(1.0, omega);</span><br><span class="line">        &#125;</span><br><span class="line">        spectrum[k] = sum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    spectrum</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 扭曲离散傅里叶变换</span><br><span class="line">fn wdft(signal: &amp;[f64]) -&gt; Vec&lt;Complex&lt;f64&gt;&gt; &#123;</span><br><span class="line">    let n = signal.len();</span><br><span class="line">    let spectrum = dft(signal);</span><br><span class="line"></span><br><span class="line">    let warped_spectrum: Vec&lt;Complex&lt;f64&gt;&gt; = spectrum</span><br><span class="line">        .iter()</span><br><span class="line">        .enumerate()</span><br><span class="line">        .map(|(k, &amp;value)| &#123;</span><br><span class="line">            let omega = 2.0 * PI * k as f64 / n as f64;</span><br><span class="line">            let warped_omega = distortion_function(omega);</span><br><span class="line">            value * Complex::from_polar(1.0, warped_omega)</span><br><span class="line">        &#125;)</span><br><span class="line">        .collect();</span><br><span class="line"></span><br><span class="line">    warped_spectrum</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 反离散傅里叶变换</span><br><span class="line">fn idft(spectrum: &amp;[Complex&lt;f64&gt;]) -&gt; Vec&lt;f64&gt; &#123;</span><br><span class="line">    let n = spectrum.len();</span><br><span class="line">    let mut signal = vec![0.0; n];</span><br><span class="line"></span><br><span class="line">    for n in 0..n &#123;</span><br><span class="line">        let mut sum = Complex::new(0.0, 0.0);</span><br><span class="line">        for k in 0..n &#123;</span><br><span class="line">            let omega = 2.0 * PI * k as f64 * n as f64 / n as f64;</span><br><span class="line">            sum += spectrum[k] * Complex::from_polar(1.0, omega);</span><br><span class="line">        &#125;</span><br><span class="line">        signal[n] = sum.re / n as f64;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    signal</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fn main() &#123;</span><br><span class="line">    // 生成一个简单的示例信号</span><br><span class="line">    let signal: Vec&lt;f64&gt; = (0..8).map(|i| i as f64).collect();</span><br><span class="line"></span><br><span class="line">    // 进行WDFT变换</span><br><span class="line">    let spectrum = wdft(&amp;signal);</span><br><span class="line"></span><br><span class="line">    // 对频域表示进行处理（这里省略具体处理步骤）</span><br><span class="line"></span><br><span class="line">    // 进行反离散傅里叶变换</span><br><span class="line">    let output_signal = idft(&amp;spectrum);</span><br><span class="line"></span><br><span class="line">    // 输出结果</span><br><span class="line">    println!(&quot;原始信号：&#123;:?&#125;&quot;, signal);</span><br><span class="line">    println!(&quot;经过WDFT变换后的信号：&#123;:?&#125;&quot;, output_signal);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;!-- toc --&gt;


&lt;h3 id=&quot;WDFT-Warped-Discrete-Fourier-Transform-by-Go&quot;&gt;&lt;a href=&quot;#WDFT-Warped-Discrete-Fourier-Transform-by-Go&quot; class=&quot;headerlink&quot; title=&quot;WDFT (Warped Discrete Fourier Transform) by Go&quot;&gt;&lt;/a&gt;WDFT (Warped Discrete Fourier Transform) by Go&lt;/h3&gt;&lt;h5 id=&quot;Implementation-of-Go-language&quot;&gt;&lt;a href=&quot;#Implementation-of-Go-language&quot; class=&quot;headerlink&quot; title=&quot;Implementation of Go language:&quot;&gt;&lt;/a&gt;Implementation of Go language:&lt;/h5&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://www.defense.ink/categories/Algorithm/"/>
    
    
    <category term="clang" scheme="https://www.defense.ink/tags/clang/"/>
    
    <category term="type" scheme="https://www.defense.ink/tags/type/"/>
    
  </entry>
  
  <entry>
    <title>AI drawing ControlNet local implementation steps by stable-diffusion-webui（AI绘画ControlNet本地构建实施步骤 by stable-diffusion-webui）</title>
    <link href="https://www.defense.ink/4de059e7.html"/>
    <id>https://www.defense.ink/4de059e7.html</id>
    <published>2023-08-13T08:28:08.000Z</published>
    <updated>2024-02-17T03:35:16.581Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><h3 id="Install-stable-diffusion-webui"><a href="#Install-stable-diffusion-webui" class="headerlink" title="Install stable-diffusion-webui"></a>Install stable-diffusion-webui</h3><p><strong>[Note]:</strong></p><ul><li>Unable to install due to network problems, it is recommended to use GIT source pull installation<br>（因网络问题导致无法安装，故建议使用GIT源码拉取安装方式）</li><li>Due to the large size of the model file, it is recommended to ensure sufficient space before installation: At least [source code + data model + extension]25G<br>（因模型文件较大，建议安装前确保有足够空间: 至少[源码+数据模型+扩展]25G）</li><li>The PC terminal to be built is 🍎 macOS Ventura 13.4.1(c), and the Windows environment is built in much the same way.<br>（构建PC终端是🍎 macOS Ventura 13.4.1(c)，Windows系统环境构建方式大同小异）  </li><li>Basic build tools (brew management recommended)<br>（基础构建工具（推荐brew管理））<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cmake</span><br><span class="line">wget</span><br><span class="line">git</span><br><span class="line">rust</span><br><span class="line">protobuf</span><br><span class="line">python3.x </span><br></pre></td></tr></table></figure></li></ul><h6 id="Project-key-directory（项目关键目录）"><a href="#Project-key-directory（项目关键目录）" class="headerlink" title="Project key directory（项目关键目录）"></a>Project key directory（项目关键目录）</h6><ul><li>stable-diffusion-webui&#x2F;extensions （扩展）</li><li>stable-diffusion-webui&#x2F;models (模型)</li></ul><h3 id="Construction-steps（构建步骤）"><a href="#Construction-steps（构建步骤）" class="headerlink" title="Construction steps（构建步骤）"></a>Construction steps（构建步骤）</h3><span id="more"></span><ul><li><p>Install and start service: stable-diffusion-webui (源码安装：stable-diffusion-webui)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># Pull source code</span><br><span class="line">git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui.git &amp;&amp; cd stable-diffusion-webui</span><br><span class="line"></span><br><span class="line"># start web UI （启动web UI）</span><br><span class="line">./webui.sh</span><br><span class="line"></span><br><span class="line"># Running on local URL:  http://127.0.0.1:7860</span><br></pre></td></tr></table></figure></li><li><p>Default web UI url： <a href="http://127.0.0.1:7860/">http://127.0.0.1:7860</a></p></li></ul><h6 id="base-model-source-download-绘图基础模型下载"><a href="#base-model-source-download-绘图基础模型下载" class="headerlink" title="base model source download (绘图基础模型下载)"></a>base model source download (绘图基础模型下载)</h6><ul><li>AI drawing basic model download <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># models directory</span><br><span class="line">cd stable-diffusion-webui/models/Stable-diffusion</span><br><span class="line"></span><br><span class="line">wget https://huggingface.co/stabilityai/stable-diffusion-2/resolve/main/768-v-ema.ckpt</span><br><span class="line"></span><br><span class="line"># back stable-diffusion-webui &amp; restart webui.sh</span><br><span class="line">./webui.sh</span><br></pre></td></tr></table></figure></li></ul><h3 id="Basic-extensions-install-（基础插件安装）"><a href="#Basic-extensions-install-（基础插件安装）" class="headerlink" title="Basic extensions install （基础插件安装）"></a>Basic extensions install （基础插件安装）</h3><ul><li>Install controlnet extension （安装ContolNet扩展）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># cd extensions path</span><br><span class="line">cd stable-diffusion-webui/extensions</span><br><span class="line"></span><br><span class="line"># Pull extension source code</span><br><span class="line">git clone https://github.com/Mikubill/sd-webui-controlnet.git</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># back to browser web UI click button：apply and restart</span><br></pre></td></tr></table></figure></li></ul><h6 id="Project-key-directory（项目关键目录）-1"><a href="#Project-key-directory（项目关键目录）-1" class="headerlink" title="Project key directory（项目关键目录）"></a>Project key directory（项目关键目录）</h6><ul><li><p>stable-diffusion-webui&#x2F;extensions （扩展）</p></li><li><p>stable-diffusion-webui&#x2F;models (模型)</p></li><li><p>Install openpose-editor extension (Custom pose) （安装openpose扩展）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># cd extensions path</span><br><span class="line">cd stable-diffusion-webui/extensions</span><br><span class="line"></span><br><span class="line"># Pull extension source code</span><br><span class="line">git clone https://github.com/fkunn1326/openpose-editor.git</span><br><span class="line"># back to browser web UI click button：apply and restart</span><br></pre></td></tr></table></figure></li></ul><h6 id="Extensions-include-directory-structure-（扩展包含目录结构）"><a href="#Extensions-include-directory-structure-（扩展包含目录结构）" class="headerlink" title="Extensions include directory structure （扩展包含目录结构）"></a>Extensions include directory structure （扩展包含目录结构）</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">extensions</span><br><span class="line">├── openpose-editor-master</span><br><span class="line">├── put extensions here.txt</span><br><span class="line">└── sd-webui-controlnet-main</span><br></pre></td></tr></table></figure><h6 id="Basic-Extensions-have-been-installed"><a href="#Basic-Extensions-have-been-installed" class="headerlink" title="Basic Extensions have been installed."></a>Basic Extensions have been installed.</h6><ul><li>back home page and open ControlNet tab.</li></ul><h3 id="Controlnet-associated-base-model-download-controlnet相关联的基础模型下载"><a href="#Controlnet-associated-base-model-download-controlnet相关联的基础模型下载" class="headerlink" title="Controlnet associated base model download (controlnet相关联的基础模型下载)"></a>Controlnet associated base model download (controlnet相关联的基础模型下载)</h3><h6 id="A-list-of-optional-models-is-suggested"><a href="#A-list-of-optional-models-is-suggested" class="headerlink" title="A list of optional models is suggested"></a>A list of optional models is suggested</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># cd models ControlNet path</span><br><span class="line">mkdir -p stable-diffusion-webui/models/ControlNet &amp;&amp; cd stable-diffusion-webui/models/ControlNet</span><br><span class="line"></span><br><span class="line"># canny</span><br><span class="line">wget https://huggingface.co/lllyasviel/ControlNet/resolve/main/models/control_sd15_canny.pth</span><br><span class="line"></span><br><span class="line"># openpose</span><br><span class="line">wget https://huggingface.co/lllyasviel/ControlNet/resolve/main/models/control_sd15_openpose.pth</span><br><span class="line"></span><br><span class="line"># scribble</span><br><span class="line">wget https://huggingface.co/lllyasviel/ControlNet/resolve/main/models/control_sd15_scribble.pth</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="Models-include-directory-structure-模型包含目录结构"><a href="#Models-include-directory-structure-模型包含目录结构" class="headerlink" title="Models include directory structure (模型包含目录结构)"></a>Models include directory structure (模型包含目录结构)</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">models</span><br><span class="line">├── ControlNet</span><br><span class="line">│   ├── control_sd15_canny.pth</span><br><span class="line">│   ├── control_sd15_openpose.pth</span><br><span class="line">│   └── control_sd15_scribble.pth</span><br><span class="line">├── Stable-diffusion</span><br><span class="line">│   ├── 768-v-ema.ckpt</span><br><span class="line">│   └── Put Stable Diffusion checkpoints here.txt</span><br></pre></td></tr></table></figure><h3 id="Installation-complete"><a href="#Installation-complete" class="headerlink" title="Installation complete"></a>Installation complete</h3><p>Notice：Note that some source code, model and extension download network is slow, it is recommended to use professional download tools to download<br>（注意事项，部分源码、模型和扩展下载网络缓慢，建议采用专业下载工具下载）</p>]]></content>
    
    
    <summary type="html">&lt;!-- toc --&gt;


&lt;h3 id=&quot;Install-stable-diffusion-webui&quot;&gt;&lt;a href=&quot;#Install-stable-diffusion-webui&quot; class=&quot;headerlink&quot; title=&quot;Install stable-diffusion-webui&quot;&gt;&lt;/a&gt;Install stable-diffusion-webui&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;[Note]:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Unable to install due to network problems, it is recommended to use GIT source pull installation&lt;br&gt;（因网络问题导致无法安装，故建议使用GIT源码拉取安装方式）&lt;/li&gt;
&lt;li&gt;Due to the large size of the model file, it is recommended to ensure sufficient space before installation: At least [source code + data model + extension]25G&lt;br&gt;（因模型文件较大，建议安装前确保有足够空间: 至少[源码+数据模型+扩展]25G）&lt;/li&gt;
&lt;li&gt;The PC terminal to be built is 🍎 macOS Ventura 13.4.1(c), and the Windows environment is built in much the same way.&lt;br&gt;（构建PC终端是🍎 macOS Ventura 13.4.1(c)，Windows系统环境构建方式大同小异）  &lt;/li&gt;
&lt;li&gt;Basic build tools (brew management recommended)&lt;br&gt;（基础构建工具（推荐brew管理））&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cmake&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wget&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rust&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;protobuf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;python3.x &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&quot;Project-key-directory（项目关键目录）&quot;&gt;&lt;a href=&quot;#Project-key-directory（项目关键目录）&quot; class=&quot;headerlink&quot; title=&quot;Project key directory（项目关键目录）&quot;&gt;&lt;/a&gt;Project key directory（项目关键目录）&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;stable-diffusion-webui&amp;#x2F;extensions （扩展）&lt;/li&gt;
&lt;li&gt;stable-diffusion-webui&amp;#x2F;models (模型)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Construction-steps（构建步骤）&quot;&gt;&lt;a href=&quot;#Construction-steps（构建步骤）&quot; class=&quot;headerlink&quot; title=&quot;Construction steps（构建步骤）&quot;&gt;&lt;/a&gt;Construction steps（构建步骤）&lt;/h3&gt;</summary>
    
    
    
    <category term="AI" scheme="https://www.defense.ink/categories/AI/"/>
    
    <category term="painting" scheme="https://www.defense.ink/categories/AI/painting/"/>
    
    <category term="Controlnet" scheme="https://www.defense.ink/categories/AI/painting/Controlnet/"/>
    
    <category term="Drawing" scheme="https://www.defense.ink/categories/AI/painting/Controlnet/Drawing/"/>
    
    
    <category term="AI" scheme="https://www.defense.ink/tags/AI/"/>
    
    <category term="stable-diffusion-webui" scheme="https://www.defense.ink/tags/stable-diffusion-webui/"/>
    
  </entry>
  
  <entry>
    <title>Tribute to the great legendary philanthropist and programmer Bram Moolenaar, the original author and software maintainer of VIM（致敬伟大传奇的慈善家和程序员Bram Moolenaar，VIM最初作者和软件维护者）</title>
    <link href="https://www.defense.ink/aa470947.html"/>
    <id>https://www.defense.ink/aa470947.html</id>
    <published>2023-08-06T12:22:08.000Z</published>
    <updated>2024-02-17T03:35:16.582Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><h3 id="Tribute-to-the-great-legendary-philanthropist-and-programmer-Bram-Moolenaar-the-original-author-and-software-maintainer-of-VIM（致敬伟大传奇的慈善家和程序员Bram-Moolenaar，VIM最初作者和软件维护者）"><a href="#Tribute-to-the-great-legendary-philanthropist-and-programmer-Bram-Moolenaar-the-original-author-and-software-maintainer-of-VIM（致敬伟大传奇的慈善家和程序员Bram-Moolenaar，VIM最初作者和软件维护者）" class="headerlink" title="Tribute to the great legendary philanthropist and programmer Bram Moolenaar, the original author and software maintainer of VIM（致敬伟大传奇的慈善家和程序员Bram Moolenaar，VIM最初作者和软件维护者）"></a>Tribute to the great legendary philanthropist and programmer Bram Moolenaar, the original author and software maintainer of VIM（致敬伟大传奇的慈善家和程序员Bram Moolenaar，VIM最初作者和软件维护者）</h3><p>Bram Moolenaar is a Dutch computer programmer and the creator of the famous text editor Vim.</p><p>Bram Moolenaar was born in 1961 in The Hague, Netherlands. In his career, he has worked in multiple fields such as software development and system management. However, his most well-known contribution was the creation of Vim, a popular text editor.</p><p>In 1991, the standard editor Vi for Unix at that time had very limited versions on the MS-DOS platform, and Bram Moolenaar decided to develop a more powerful and scalable editor. He released the first version of Vim (Vi IMimproved) in 1991 and continued to drive its subsequent development and improvement.</p><span id="more"></span><p>Vim is a free and open source text editor with powerful features and high customizability. It supports multiple operating systems, including Unix&#x2F;Linux, Microsoft Windows, Mac OS, and has become one of the preferred tools for programmers and developers.</p><p>In addition to Vim, Bram Moolenaar has also actively participated in the development and maintenance of multiple open source projects, making significant contributions to the software industry.</p><p>As an excellent programmer and creator, Bram Moolenaar is widely praised and respected for his dedication to Vim and contributions to the open source community. His work and achievements have had a great impact on the global programmer community and continue to inspire a new generation of software developers.</p><h3 id="致敬伟大传奇的慈善家和程序员Bram-Moolenaar，VIM最初作者和软件维护者"><a href="#致敬伟大传奇的慈善家和程序员Bram-Moolenaar，VIM最初作者和软件维护者" class="headerlink" title="致敬伟大传奇的慈善家和程序员Bram Moolenaar，VIM最初作者和软件维护者"></a>致敬伟大传奇的慈善家和程序员Bram Moolenaar，VIM最初作者和软件维护者</h3><p>Bram Moolenaar是一位荷兰的计算机程序员，他是著名的文本编辑器Vim的创作者。</p><p>Bram Moolenaar于1961年出生在荷兰的海牙。在他的职业生涯中，他曾经从事过软件开发和系统管理等多个领域的工作。然而，他最为人所知的贡献是他创造了Vim这一广受欢迎的文本编辑器。</p><p>在1991年，当时的Unix的标准编辑器Vi在MS-DOS平台上的版本非常有限，Bram Moolenaar决定开发一个更加强大和可扩展的编辑器。他于1991年发布了第一个版本的Vim（Vi IMproved），并继续推动其后续的发展和改进。</p><p>Vim是一个自由、开源的文本编辑器，具有强大的功能和高度的可定制性。它支持多种操作系统，包括Unix&#x2F;Linux、Microsoft Windows、Mac OS等，并且成为程序员和开发者们的首选工具之一。</p><p>除了Vim，Bram Moolenaar还积极参与了多个开源项目的开发与维护，为软件界做出了重要的贡献。</p><p>作为一名优秀的程序员和创造者，Bram Moolenaar因其对Vim的奉献和对开源社区的贡献而受到广泛的赞誉和尊重。他的工作和成就为全球的程序员社区带来了极大的影响，并且持续地激励着新一代的软件开发者们。</p><p>R.I.P 🕯️🙏</p>]]></content>
    
    
    <summary type="html">&lt;!-- toc --&gt;


&lt;h3 id=&quot;Tribute-to-the-great-legendary-philanthropist-and-programmer-Bram-Moolenaar-the-original-author-and-software-maintainer-of-VIM（致敬伟大传奇的慈善家和程序员Bram-Moolenaar，VIM最初作者和软件维护者）&quot;&gt;&lt;a href=&quot;#Tribute-to-the-great-legendary-philanthropist-and-programmer-Bram-Moolenaar-the-original-author-and-software-maintainer-of-VIM（致敬伟大传奇的慈善家和程序员Bram-Moolenaar，VIM最初作者和软件维护者）&quot; class=&quot;headerlink&quot; title=&quot;Tribute to the great legendary philanthropist and programmer Bram Moolenaar, the original author and software maintainer of VIM（致敬伟大传奇的慈善家和程序员Bram Moolenaar，VIM最初作者和软件维护者）&quot;&gt;&lt;/a&gt;Tribute to the great legendary philanthropist and programmer Bram Moolenaar, the original author and software maintainer of VIM（致敬伟大传奇的慈善家和程序员Bram Moolenaar，VIM最初作者和软件维护者）&lt;/h3&gt;&lt;p&gt;Bram Moolenaar is a Dutch computer programmer and the creator of the famous text editor Vim.&lt;/p&gt;
&lt;p&gt;Bram Moolenaar was born in 1961 in The Hague, Netherlands. In his career, he has worked in multiple fields such as software development and system management. However, his most well-known contribution was the creation of Vim, a popular text editor.&lt;/p&gt;
&lt;p&gt;In 1991, the standard editor Vi for Unix at that time had very limited versions on the MS-DOS platform, and Bram Moolenaar decided to develop a more powerful and scalable editor. He released the first version of Vim (Vi IMimproved) in 1991 and continued to drive its subsequent development and improvement.&lt;/p&gt;</summary>
    
    
    
    <category term="history-of-programing" scheme="https://www.defense.ink/categories/history-of-programing/"/>
    
    <category term="daily" scheme="https://www.defense.ink/categories/history-of-programing/daily/"/>
    
    
    <category term="VIM" scheme="https://www.defense.ink/tags/VIM/"/>
    
    <category term="VIM Author" scheme="https://www.defense.ink/tags/VIM-Author/"/>
    
  </entry>
  
  <entry>
    <title>Linux login shell信息展示类（neofetch、motd等banner类提示信息展示）导致的rsync服务不可用问题注意事项</title>
    <link href="https://www.defense.ink/954c81e2.html"/>
    <id>https://www.defense.ink/954c81e2.html</id>
    <published>2023-06-15T14:11:01.000Z</published>
    <updated>2024-02-17T03:35:16.588Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><h6 id="终端报错信息-以Debian-11-系统为例-：protocol-version-mismatch-—-is-your-shell-clean"><a href="#终端报错信息-以Debian-11-系统为例-：protocol-version-mismatch-—-is-your-shell-clean" class="headerlink" title="终端报错信息(以Debian 11 系统为例)：protocol version mismatch — is your shell clean?"></a>终端报错信息(以Debian 11 系统为例)：<strong>protocol version mismatch — is your shell clean?</strong></h6><h6 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h6><ul><li>OS: Debian GNU&#x2F;Linux 11 (bullseye) x86_64 </li><li>Host: KVM RHEL 7.6.0 PC (i440FX + PIIX, 1996) </li><li>Kernel: 5.10.0-22-amd64</li></ul><h6 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h6><ul><li><p>【问题】：导致rsync服务同步失败，报错信息: <code>&quot;protocol version mismatch — is your shell clean?&quot;</code>。</p></li><li><p>【原因】：rsync等工具非常依赖于shell执行时没有任何输出。</p></li><li><p>【建议】：<strong>不建议在.bashrc中输出neofetch、banner类和motd类提示信息</strong>，在~&#x2F;.profile中source ~&#x2F;.bashrc可以避免此问题，但需注意<code>.profile</code>循环引用执行问题。</p></li></ul><span id="more"></span><h6 id="login-shell载入文件信息相关文件："><a href="#login-shell载入文件信息相关文件：" class="headerlink" title="login shell载入文件信息相关文件："></a>login shell载入文件信息相关文件：</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/profile</span><br><span class="line">~/.profile</span><br></pre></td></tr></table></figure><p><strong>.profile</strong> 引用 <strong>.bashrc</strong>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if [ &quot;$BASH&quot; ]; then</span><br><span class="line">  if [ -f ~/.bashrc ]; then</span><br><span class="line">    . ~/.bashrc</span><br><span class="line">  fi</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p><em>输出展示信息</em>放在~&#x2F;.bashrc文件内引发的问题（rsync为例）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># ~/.bashrc: executed by bash(1) for non-login shells.</span><br><span class="line"></span><br><span class="line"># Note: PS1 and umask are already set in /etc/profile. You should not</span><br><span class="line"># need this unless you want different defaults for root.</span><br><span class="line"># PS1=&#x27;$&#123;debian_chroot:+($debian_chroot)&#125;\h:\w\$ &#x27;</span><br><span class="line"># umask 022</span><br><span class="line"></span><br><span class="line"># problem（rsync）：protocol version mismatch — is your shell clean?</span><br><span class="line">neofetch</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>【问题】：导致rsync服务同步失败，报错信息: <code>&quot;protocol version mismatch — is your shell clean?&quot;</code>。<br>【原因】：rsync等工具非常依赖于shell执行时没有任何输出。</p><p>【建议】：<strong>不建议在.bashrc中输出neofetch、banner类和motd类提示信息</strong>，在~&#x2F;.profile中source ~&#x2F;.bashrc可以避免此问题，但需注意<code>.profile</code>循环引用执行问题。</p><p>例如：<br><code>~/.profile</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if [ &quot;$BASH&quot; ]; then</span><br><span class="line">  if [ -f ~/.bashrc ]; then</span><br><span class="line">    . ~/.bashrc</span><br><span class="line">  fi</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">neofetch</span><br></pre></td></tr></table></figure><p>总结：在Linux发行版系统中，一些高度依赖.bashrc的系统工具或者命令(例如rsync)，会引发不可执行或者执行有误等问题，要留意Linux文件加载的顺序以及执行规则。</p>]]></content>
    
    
    <summary type="html">&lt;!-- toc --&gt;

&lt;h6 id=&quot;终端报错信息-以Debian-11-系统为例-：protocol-version-mismatch-—-is-your-shell-clean&quot;&gt;&lt;a href=&quot;#终端报错信息-以Debian-11-系统为例-：protocol-version-mismatch-—-is-your-shell-clean&quot; class=&quot;headerlink&quot; title=&quot;终端报错信息(以Debian 11 系统为例)：protocol version mismatch — is your shell clean?&quot;&gt;&lt;/a&gt;终端报错信息(以Debian 11 系统为例)：&lt;strong&gt;protocol version mismatch — is your shell clean?&lt;/strong&gt;&lt;/h6&gt;&lt;h6 id=&quot;系统环境&quot;&gt;&lt;a href=&quot;#系统环境&quot; class=&quot;headerlink&quot; title=&quot;系统环境&quot;&gt;&lt;/a&gt;系统环境&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;OS: Debian GNU&amp;#x2F;Linux 11 (bullseye) x86_64 &lt;/li&gt;
&lt;li&gt;Host: KVM RHEL 7.6.0 PC (i440FX + PIIX, 1996) &lt;/li&gt;
&lt;li&gt;Kernel: 5.10.0-22-amd64&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;【问题】：导致rsync服务同步失败，报错信息: &lt;code&gt;&amp;quot;protocol version mismatch — is your shell clean?&amp;quot;&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;【原因】：rsync等工具非常依赖于shell执行时没有任何输出。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;【建议】：&lt;strong&gt;不建议在.bashrc中输出neofetch、banner类和motd类提示信息&lt;/strong&gt;，在~&amp;#x2F;.profile中source ~&amp;#x2F;.bashrc可以避免此问题，但需注意&lt;code&gt;.profile&lt;/code&gt;循环引用执行问题。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="linux" scheme="https://www.defense.ink/categories/linux/"/>
    
    <category term="debian" scheme="https://www.defense.ink/categories/linux/debian/"/>
    
    
    <category term="linux" scheme="https://www.defense.ink/tags/linux/"/>
    
    <category term="debian" scheme="https://www.defense.ink/tags/debian/"/>
    
    <category term="neofetch" scheme="https://www.defense.ink/tags/neofetch/"/>
    
    <category term="rsync" scheme="https://www.defense.ink/tags/rsync/"/>
    
    <category term="banner" scheme="https://www.defense.ink/tags/banner/"/>
    
    <category term="motd" scheme="https://www.defense.ink/tags/motd/"/>
    
  </entry>
  
  <entry>
    <title>Centos7-chattr权限问题导致锁定文件无法解锁且root用户无法编辑</title>
    <link href="https://www.defense.ink/e7a4c7e2.html"/>
    <id>https://www.defense.ink/e7a4c7e2.html</id>
    <published>2023-06-14T15:11:01.000Z</published>
    <updated>2024-02-17T03:35:16.588Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><h3 id="chattr"><a href="#chattr" class="headerlink" title="chattr"></a>chattr</h3><p>chattr 命令，专门用来修改文件或目录的隐藏属性。在部分linux发行版中，部分存在chattr本身执行权限移除的默认设置，导致root用户无法编辑相关文件且chattr命令无法修改文件属性。解决的思路是先解决chattr本身的文件属性，确保chattr可用。</p><p>解决方案如下：</p><span id="more"></span><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">cp /usr/bin/chattr /usr/bin/chattr_bak</span><br><span class="line"></span><br><span class="line">chmod 755 /usr/bin/chattr_bak</span><br><span class="line"></span><br><span class="line">chattr_bak -i /usr/bin/chattr</span><br><span class="line"></span><br><span class="line">chmod 755 /usr/bin/chattr</span><br><span class="line"></span><br><span class="line">ls -la /usr/bin/chattr </span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;!-- toc --&gt;

&lt;h3 id=&quot;chattr&quot;&gt;&lt;a href=&quot;#chattr&quot; class=&quot;headerlink&quot; title=&quot;chattr&quot;&gt;&lt;/a&gt;chattr&lt;/h3&gt;&lt;p&gt;chattr 命令，专门用来修改文件或目录的隐藏属性。在部分linux发行版中，部分存在chattr本身执行权限移除的默认设置，导致root用户无法编辑相关文件且chattr命令无法修改文件属性。解决的思路是先解决chattr本身的文件属性，确保chattr可用。&lt;/p&gt;
&lt;p&gt;解决方案如下：&lt;/p&gt;</summary>
    
    
    
    <category term="linux" scheme="https://www.defense.ink/categories/linux/"/>
    
    <category term="centos" scheme="https://www.defense.ink/categories/linux/centos/"/>
    
    
    <category term="linux" scheme="https://www.defense.ink/tags/linux/"/>
    
    <category term="centos7" scheme="https://www.defense.ink/tags/centos7/"/>
    
    <category term="chattr" scheme="https://www.defense.ink/tags/chattr/"/>
    
  </entry>
  
  <entry>
    <title>macOS系统升级导致brew发行包Nginx服务Service无法启动或启动失败问题解决（MacOS Ventura 13.3）</title>
    <link href="https://www.defense.ink/8c6562df.html"/>
    <id>https://www.defense.ink/8c6562df.html</id>
    <published>2023-04-07T12:06:32.000Z</published>
    <updated>2024-02-17T03:35:16.588Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><h4 id="macOS系统升级导致brew发行包Nginx服务Service无法启动或启动失败问题解决（MacOS-Ventura-13-3）"><a href="#macOS系统升级导致brew发行包Nginx服务Service无法启动或启动失败问题解决（MacOS-Ventura-13-3）" class="headerlink" title="macOS系统升级导致brew发行包Nginx服务Service无法启动或启动失败问题解决（MacOS Ventura 13.3）"></a>macOS系统升级导致brew发行包Nginx服务Service无法启动或启动失败问题解决（MacOS Ventura 13.3）</h4><h4 id="系统版本：MacOS-Ventura-13-3"><a href="#系统版本：MacOS-Ventura-13-3" class="headerlink" title="系统版本：MacOS Ventura 13.3"></a>系统版本：MacOS Ventura 13.3</h4><h4 id="Nginx服务启动失败问题描述："><a href="#Nginx服务启动失败问题描述：" class="headerlink" title="Nginx服务启动失败问题描述："></a>Nginx服务启动失败问题描述：</h4><p>MacOS系统升级导致brew发行包Nginx服务Service无法启动或启动失败，提示隐私或权限问题，系统限制root用户运行。</p><h4 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h4><p>此脚本用于解决MacOS升级新版后，基于Homebrew发行的Nginx包守护服务无法启动运行问题。<br>此问题一般由MacOS更新的权限隐私策略与nginx守护服务权限冲突导致服务无法启动。该脚本通过直接操作nginx服务进程实现服务的快捷管理，增加常用进程基础检查操作，封装快捷操作脚本。</p><p><a href="https://github.com/ljq">ljq@GitHub</a></p><p>Homebrew安装nginx:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install nginx</span><br></pre></td></tr></table></figure><p><a href="https://github.com/ljq/jackliu-usual-shell/blob/master/macos/macos_nginx_brew_service.sh">macos_nginx_brew_service.sh</a></p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env bash</span><br><span class="line"># Author: Jack Liu</span><br><span class="line"># Date Time: 2023-04-07 20:06</span><br><span class="line"># Site: https://github.com/ljq</span><br><span class="line"># Blog: https://www.defense.ink</span><br><span class="line"># Email: ljqlab@163.com</span><br><span class="line"># Description: 🍎 The nginx distribution provided by hombrew daemon service shortcut script.</span><br><span class="line"></span><br><span class="line"># help info</span><br><span class="line">USEAGE=&quot;[usage]: [-s | s | status] [start | restart | reload | stop] [-h | -help | --help] [-v | -V | --version]&quot;</span><br><span class="line">HELP_INFO=$(cat &lt;&lt;EOF</span><br><span class="line">[help information]</span><br><span class="line"></span><br><span class="line">Description: 🍎 </span><br><span class="line">    This script is used to resolve the problem that the Homebrew-based Nginx package </span><br><span class="line">    daemon service cannot be started after the new version of MacOS is updated. This </span><br><span class="line">    problem is usually caused by the conflict between the permission privacy policy </span><br><span class="line">    updated by MacOS and the permission of the nginx daemon service. This script </span><br><span class="line">    manages the service by directly manipulating the nginx service process.</span><br><span class="line"></span><br><span class="line">Command usage:</span><br><span class="line"></span><br><span class="line">    -v|-V|version: Show current nginx version information.</span><br><span class="line">    </span><br><span class="line">    -h|-help|--help: Show help info.</span><br><span class="line">    </span><br><span class="line">    -s|s|status: Nginx process status.</span><br><span class="line">    </span><br><span class="line">    start|restart|reload|stop: Service operation.</span><br><span class="line"></span><br><span class="line">EOF</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"># set variables</span><br><span class="line">sh_file=$0</span><br><span class="line">argv1=$1</span><br><span class="line">nginx_conf_file=$(brew --prefix)/etc/nginx/nginx.conf</span><br><span class="line">nginx_bin=$(brew --prefix nginx)/bin/nginx</span><br><span class="line"></span><br><span class="line"># main</span><br><span class="line"></span><br><span class="line"># description</span><br><span class="line">if [ &quot;$argv1&quot; = &quot;&quot; ]; then</span><br><span class="line">echo -e &quot;[brew&#x27;s nginx service shortcut script]\n&quot;</span><br><span class="line">fi</span><br><span class="line"># initialization check</span><br><span class="line">if [ ! -x &quot;$(command -v brew)&quot; ]; then</span><br><span class="line">echo -e &quot;[WARNING] Homebrew is not installed.&quot;</span><br><span class="line">exit</span><br><span class="line">fi</span><br><span class="line">if [ ! -f &quot;$nginx_bin&quot; ]; then</span><br><span class="line">echo -e &quot;[WARNING] The version of nignx provided by homebrew is not installed.&quot;</span><br><span class="line">exit</span><br><span class="line">fi</span><br><span class="line">if [ ! -f &quot;$nginx_conf_file&quot; ]; then</span><br><span class="line">        echo -e &quot;[WARNING] The nignx.conf file provided by homebrew is not exist.&quot;</span><br><span class="line">        exit</span><br><span class="line">fi</span><br><span class="line"># nginx config check</span><br><span class="line">chk_status=$($&#123;nginx_bin&#125; -t 2&gt;&amp;1)</span><br><span class="line">if [[ $chk_status =~ &quot;syntax is ok&quot; ]] &amp;&amp; [[ $chk_status =~ &quot;test is successful&quot; ]]; then</span><br><span class="line">#echo -e &quot;[INFO] The nginx.conf syntax is ok.\n&quot;</span><br><span class="line">echo &quot;&quot;</span><br><span class="line">else</span><br><span class="line">echo -e &quot;[ERROR] The nginx.conf syntax is incorrect.&quot;</span><br><span class="line">exit</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"># exec</span><br><span class="line">case &quot;$argv1&quot; in</span><br><span class="line">&quot;-v&quot;|&quot;-version&quot;|&quot;--version&quot;|&quot;-V&quot;)</span><br><span class="line">  $&#123;nginx_bin&#125; -V</span><br><span class="line">  ;;</span><br><span class="line">&quot;-s&quot;|&quot;s&quot;|&quot;status&quot;)</span><br><span class="line">  serv_process=$(ps -ef | grep nginx | grep -v &quot;grep\|$&#123;sh_file&#125;&quot;)</span><br><span class="line">  if [ &quot;$serv_process&quot; = &quot;&quot; ]; then</span><br><span class="line">echo -e &quot;[NOTICE] Nginx service status is stoped.\n&quot;</span><br><span class="line">  else</span><br><span class="line">  echo -e &quot;[NOTICE] Nginx service status is running.\n&quot;</span><br><span class="line">  fi</span><br><span class="line">  ;;</span><br><span class="line">&quot;start&quot;)</span><br><span class="line">  serv_process=$(ps -ef | grep nginx | grep -v &quot;grep\|$&#123;sh_file&#125;&quot;)</span><br><span class="line">  if [ &quot;$serv_process&quot; = &quot;&quot; ]; then</span><br><span class="line">    echo -e &quot;[NOTICE] Nginx service is starting ...\n&quot;</span><br><span class="line">    $&#123;nginx_bin&#125; -c $nginx_conf_file</span><br><span class="line">  else</span><br><span class="line">  echo -e &quot;[WARNING] Nginx service is already running. Do not repeat operation.\n&quot;</span><br><span class="line">  fi</span><br><span class="line">  ;;</span><br><span class="line">&quot;restart&quot;)</span><br><span class="line">  echo -e &quot;[NOTICE] Nginx service is restarting ...\n&quot;</span><br><span class="line">  $&#123;nginx_bin&#125; -s stop</span><br><span class="line">  $&#123;nginx_bin&#125; -c $nginx_conf_file</span><br><span class="line">  ;;</span><br><span class="line">&quot;reload&quot;)</span><br><span class="line">  echo -e &quot;[NOTICE] Nginx service is reloading ...\n&quot;</span><br><span class="line">  $&#123;nginx_bin&#125; -s reload</span><br><span class="line">  ;;</span><br><span class="line">&quot;stop&quot;)</span><br><span class="line">  $&#123;nginx_bin&#125; -s stop</span><br><span class="line">  echo -e &quot;[NOTICE] Nginx service has stoped.\n&quot;</span><br><span class="line">  ;;</span><br><span class="line">&quot;-t&quot;)</span><br><span class="line">  $&#123;nginx_bin&#125; -t</span><br><span class="line">  ;;</span><br><span class="line">&quot;-h&quot;|&quot;-help&quot;|&quot;--help&quot;)</span><br><span class="line">  echo -e &quot;$&#123;HELP_INFO&#125;\n&quot; </span><br><span class="line">  ;;</span><br><span class="line">*)</span><br><span class="line">  echo -e &quot;[WARNING] Parameter is invalid or missing. Please run help command: $&#123;sh_file&#125; -h\n&quot;</span><br><span class="line">  ;;</span><br><span class="line">esac</span><br><span class="line"></span><br><span class="line">exit</span><br></pre></td></tr></table></figure><h4 id="脚本使用案例"><a href="#脚本使用案例" class="headerlink" title="脚本使用案例"></a>脚本使用案例</h4><h6 id="脚本增加可执行权限："><a href="#脚本增加可执行权限：" class="headerlink" title="脚本增加可执行权限："></a>脚本增加可执行权限：</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x macos_nginx_brew_service.sh</span><br></pre></td></tr></table></figure><h6 id="查看帮助："><a href="#查看帮助：" class="headerlink" title="查看帮助："></a>查看帮助：</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./macos_nginx_brew_service.sh -h</span><br></pre></td></tr></table></figure><h6 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 启动</span><br><span class="line">./macos_nginx_brew_service.sh start</span><br><span class="line"># 重启</span><br><span class="line">./macos_nginx_brew_service.sh restart</span><br><span class="line"># 状态</span><br><span class="line">./macos_nginx_brew_service.sh status</span><br><span class="line"># 重载</span><br><span class="line">./macos_nginx_brew_service.sh reload</span><br><span class="line"># 停止</span><br><span class="line">./macos_nginx_brew_service.sh stop</span><br><span class="line"># nginx 版本</span><br><span class="line">./macos_nginx_brew_service.sh -V</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明:"></a>参数说明:</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-v|-V|version: Show current nginx version information.</span><br><span class="line"></span><br><span class="line">-h|-help|--help: Show help info.</span><br><span class="line"></span><br><span class="line">-s|s|status: Nginx process status.</span><br><span class="line"></span><br><span class="line">start|restart|reload|stop: Service operation.</span><br></pre></td></tr></table></figure><p><a href="https://github.com/ljq/jackliu-usual-shell/blob/master/macos/macos_nginx_brew_service.sh">macos_nginx_brew_service.sh</a></p><p><a href="https://github.com/ljq">ljq@GitHub</a></p>]]></content>
    
    
    <summary type="html">&lt;!-- toc --&gt;

&lt;h4 id=&quot;macOS系统升级导致brew发行包Nginx服务Service无法启动或启动失败问题解决（MacOS-Ventura-13-3）&quot;&gt;&lt;a href=&quot;#macOS系统升级导致brew发行包Nginx服务Service无法启动或启动失败问题解决（MacOS-Ventura-13-3）&quot; class=&quot;headerlink&quot; title=&quot;macOS系统升级导致brew发行包Nginx服务Service无法启动或启动失败问题解决（MacOS Ventura 13.3）&quot;&gt;&lt;/a&gt;macOS系统升级导致brew发行包Nginx服务Service无法启动或启动失败问题解决（MacOS Ventura 13.3）&lt;/h4&gt;&lt;h4 id=&quot;系统版本：MacOS-Ventura-13-3&quot;&gt;&lt;a href=&quot;#系统版本：MacOS-Ventura-13-3&quot; class=&quot;headerlink&quot; title=&quot;系统版本：MacOS Ventura 13.3&quot;&gt;&lt;/a&gt;系统版本：MacOS Ventura 13.3&lt;/h4&gt;&lt;h4 id=&quot;Nginx服务启动失败问题描述：&quot;&gt;&lt;a href=&quot;#Nginx服务启动失败问题描述：&quot; class=&quot;headerlink&quot; title=&quot;Nginx服务启动失败问题描述：&quot;&gt;&lt;/a&gt;Nginx服务启动失败问题描述：&lt;/h4&gt;&lt;p&gt;MacOS系统升级导致brew发行包Nginx服务Service无法启动或启动失败，提示隐私或权限问题，系统限制root用户运行。&lt;/p&gt;
&lt;h4 id=&quot;解决方案：&quot;&gt;&lt;a href=&quot;#解决方案：&quot; class=&quot;headerlink&quot; title=&quot;解决方案：&quot;&gt;&lt;/a&gt;解决方案：&lt;/h4&gt;&lt;p&gt;此脚本用于解决MacOS升级新版后，基于Homebrew发行的Nginx包守护服务无法启动运行问题。&lt;br&gt;此问题一般由MacOS更新的权限隐私策略与nginx守护服务权限冲突导致服务无法启动。该脚本通过直接操作nginx服务进程实现服务的快捷管理，增加常用进程基础检查操作，封装快捷操作脚本。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ljq&quot;&gt;ljq@GitHub&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Homebrew安装nginx:&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;brew install nginx&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ljq/jackliu-usual-shell/blob/master/macos/macos_nginx_brew_service.sh&quot;&gt;macos_nginx_brew_service.sh&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="macos" scheme="https://www.defense.ink/categories/macos/"/>
    
    
    <category term="homebrew" scheme="https://www.defense.ink/tags/homebrew/"/>
    
    <category term="macos" scheme="https://www.defense.ink/tags/macos/"/>
    
    <category term="nginx" scheme="https://www.defense.ink/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>MacOS English terminal Chinese garbled characters solution （MacOS英文环境终端中文内容乱码问题解决）</title>
    <link href="https://www.defense.ink/bb19ba9f.html"/>
    <id>https://www.defense.ink/bb19ba9f.html</id>
    <published>2023-02-02T12:02:03.000Z</published>
    <updated>2024-02-17T03:35:16.588Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><h4 id="Problem-presentation"><a href="#Problem-presentation" class="headerlink" title="Problem presentation"></a>Problem presentation</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">LANGUAGE = &quot;en_US:en&quot;,</span><br><span class="line">LC_ALL = (unset),</span><br><span class="line">LC_CTYPE = &quot;UTF-8&quot;,</span><br><span class="line">LANG = &quot;en_US.UTF-8&quot;</span><br><span class="line"></span><br><span class="line">warning: Falling back to a fallback locale (&quot;en_US.UTF-8&quot;).</span><br></pre></td></tr></table></figure><p>此问题常见于MacOS系统升级、OpenSSL升级后，terminal终端ssh远程链接时发出警告。</p><h4 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h4><p>在MacOS本地终端:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/ssh/ssh_config</span><br></pre></td></tr></table></figure><p>注释默认配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SendEnv LANG LC_*</span><br></pre></td></tr></table></figure><p>重启终端即可。</p><h4 id="References"><a href="#References" class="headerlink" title="References"></a>References</h4><p><a href="https://www.cyberciti.biz/faq/os-x-terminal-bash-warning-setlocale-lc_ctype-cannot-change-locale/">参考</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;!-- toc --&gt;

&lt;h4 id=&quot;Problem-presentation&quot;&gt;&lt;a href=&quot;#Problem-presentation&quot; class=&quot;headerlink&quot; title=&quot;Problem presentation&quot;&gt;&lt;/a&gt;Problem pres</summary>
      
    
    
    
    <category term="macos" scheme="https://www.defense.ink/categories/macos/"/>
    
    
    <category term="homebrew" scheme="https://www.defense.ink/tags/homebrew/"/>
    
    <category term="macos" scheme="https://www.defense.ink/tags/macos/"/>
    
  </entry>
  
  <entry>
    <title>Eight Fallacies of Distributed Systems （分布式八大谬论）</title>
    <link href="https://www.defense.ink/67fb071a.html"/>
    <id>https://www.defense.ink/67fb071a.html</id>
    <published>2022-08-09T11:02:00.000Z</published>
    <updated>2024-02-17T03:35:16.582Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><h4 id="Eight-Fallacies-of-Distributed-Systems"><a href="#Eight-Fallacies-of-Distributed-Systems" class="headerlink" title="Eight Fallacies of Distributed Systems"></a>Eight Fallacies of Distributed Systems</h4><h5 id="The-network-is-reliable"><a href="#The-network-is-reliable" class="headerlink" title="The network is reliable"></a>The network is reliable</h5><p>网络可靠。 </p><h5 id="Latency-is-zero"><a href="#Latency-is-zero" class="headerlink" title="Latency is zero"></a>Latency is zero</h5><p>延迟为零。 </p><h5 id="Bandwidth-is-infinite"><a href="#Bandwidth-is-infinite" class="headerlink" title="Bandwidth is infinite"></a>Bandwidth is infinite</h5><p>带宽是无限的。</p><h5 id="The-network-is-secure"><a href="#The-network-is-secure" class="headerlink" title="The network is secure"></a>The network is secure</h5><p>网络是安全的。</p><h5 id="Topology-doesn’t-change"><a href="#Topology-doesn’t-change" class="headerlink" title="Topology doesn’t change"></a>Topology doesn’t change</h5><p>拓扑不会改变。 </p><h5 id="There-is-one-administrator"><a href="#There-is-one-administrator" class="headerlink" title="There is one administrator"></a>There is one administrator</h5><p>只有一个管理员。</p><h5 id="Transport-cost-is-zero"><a href="#Transport-cost-is-zero" class="headerlink" title="Transport cost is zero"></a>Transport cost is zero</h5><p>运输成本为零。</p><h5 id="The-network-is-homogeneous"><a href="#The-network-is-homogeneous" class="headerlink" title="The network is homogeneous"></a>The network is homogeneous</h5><p>网络是同质的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;!-- toc --&gt;

&lt;h4 id=&quot;Eight-Fallacies-of-Distributed-Systems&quot;&gt;&lt;a href=&quot;#Eight-Fallacies-of-Distributed-Systems&quot; class=&quot;headerlink&quot; title=&quot;Ei</summary>
      
    
    
    
    <category term="distributed" scheme="https://www.defense.ink/categories/distributed/"/>
    
    
    <category term="Cloud-Distributed" scheme="https://www.defense.ink/tags/Cloud-Distributed/"/>
    
    <category term="Distributed-Systems" scheme="https://www.defense.ink/tags/Distributed-Systems/"/>
    
  </entry>
  
  <entry>
    <title>GitHub以及其他GIT平台中启用GPG2认证基本使用流程(MacOS)，增强身份识别和安全性</title>
    <link href="https://www.defense.ink/eadfec01.html"/>
    <id>https://www.defense.ink/eadfec01.html</id>
    <published>2022-06-19T11:02:02.000Z</published>
    <updated>2024-02-17T03:35:16.585Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><h4 id="base-gnupg（version-gt-x3D-2-1-17-版本gnupg已包含gpg-agent）"><a href="#base-gnupg（version-gt-x3D-2-1-17-版本gnupg已包含gpg-agent）" class="headerlink" title="base gnupg（version &gt;&#x3D; 2.1.17,版本gnupg已包含gpg-agent）"></a>base gnupg（version &gt;&#x3D; 2.1.17,版本gnupg已包含gpg-agent）</h4><p><strong>注意事项</strong>：gpg2默认交互式输入密码，有相应的解决方案。</p><h6 id="brew-install（推荐）："><a href="#brew-install（推荐）：" class="headerlink" title="brew install（推荐）："></a>brew install（推荐）：</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install gnupg</span><br></pre></td></tr></table></figure><h6 id="版本信息（截至2022-06-19）"><a href="#版本信息（截至2022-06-19）" class="headerlink" title="版本信息（截至2022.06.19）"></a>版本信息（截至2022.06.19）</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">gnupg: stable 2.3.6 (bottled)</span><br><span class="line">GNU Pretty Good Privacy (PGP) package</span><br><span class="line">https://gnupg.org/</span><br><span class="line">/usr/local/Cellar/gnupg/2.3.6 (149 files, 13.3MB) *</span><br><span class="line">  Poured from bottle on 2022-05-04 at 00:14:15</span><br><span class="line">From: https://mirrors.ustc.edu.cn/homebrew-core.git/Formula/gnupg.rb</span><br><span class="line">License: GPL-3.0-or-later</span><br></pre></td></tr></table></figure><span id="more"></span><h4 id="生成以及查看密钥"><a href="#生成以及查看密钥" class="headerlink" title="生成以及查看密钥"></a>生成以及查看密钥</h4><ul><li><p>生成密钥(交互选择建议默认)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpg --full-generate-key</span><br></pre></td></tr></table></figure><ul><li>在提示时，指定要生成的密钥类型，或按 Enter 键接受默认值。</li><li>在提示时，指定想要的密钥大小，或按 Enter 键接受默认值。 密钥必须至少是 4096 位。</li><li>输入密钥的有效时长。 按 Enter 键将指定默认选择，表示该密钥不会过期。</li><li>验证您的选择是否正确。</li><li>输入您的用户 ID 信息。</li></ul></li><li><p>查看已签发密钥</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpg --list-secret-keys --keyid-format=long</span><br></pre></td></tr></table></figure></li><li><p>查看指定公钥的信息(Prints the GPG key ID, in ASCII armor format)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpg --armor --export &lt;GPG key ID&gt;</span><br></pre></td></tr></table></figure><p>复制公钥信息到GitHub上：<br>从 <code>-----BEGIN PGP PUBLIC KEY BLOCK-----</code> 开始，到 <code>-----END PGP PUBLIC KEY BLOCK-----</code></p></li><li><p>设置邮箱(建议全局默认一个常用Email)：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;&quot;</span><br></pre></td></tr></table></figure></li><li><p>设置项目开启GPG验证签名(<strong>不建议全局开启，可局部开启，防止影响其他平台或项目的提交引发连锁反应</strong>)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config commit.gpgsign true</span><br></pre></td></tr></table></figure></li></ul><h4 id="GPG密钥导出以及备份"><a href="#GPG密钥导出以及备份" class="headerlink" title="GPG密钥导出以及备份"></a>GPG密钥导出以及备份</h4><p>创建导出备份密钥文件的路径(例如)：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 注意：密钥备份完毕后建议清理此目录及文件夹！</span><br><span class="line">mkdir -p ~/GPGBAK</span><br></pre></td></tr></table></figure><p><strong>警告：导出的备份密钥为敏感文件，为了安全请确保密钥异地保存妥当后，清理导出当前的备份文件</strong></p><p>备份GPG公钥</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpg -o ~/GPGBAK/gpg_keys_github_macos --export &lt;GPG Key ID&gt;</span><br></pre></td></tr></table></figure><p>备份GPG私钥</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpg -o ~/GPGBAK/gpg_secret_keys_github_macos --export-secret-keys &lt;GPG Key ID&gt;</span><br></pre></td></tr></table></figure><h4 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h4><ul><li><p>在终端可能出现git提交commit时提交失败需要输入GPG密码解密密钥？  可设置终端信息，然后重新开启一个终端生效。  </p><p>错误信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">error: gpg 数据签名失败</span><br><span class="line">fatal: 写提交对象失败</span><br></pre></td></tr></table></figure><p>解决方案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.zshrc</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># GPG CONFIG (交互式窗口不弹出解决方案)</span><br><span class="line">export GPG_TTY=$(tty)</span><br></pre></td></tr></table></figure><p>GPG2密码缓存时间设置：<br>默认文件不存在则创建</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">touch ~/.gnupg/gpg-agent.conf</span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">**推荐**配置gpg-agent 选项(密码缓存有效时间(不建议ttl设置过长！)  </span><br><span class="line">* GnuPG agent是一个帮助工具，当你运行gpg用于缓存私钥时会自动运行。</span><br><span class="line">* default-cache-ttl（seconds）：如果在失效期前，使用了相同名称的私钥，那么计数器会被重置，默认是600s（10min）</span><br><span class="line">* max-cache-ttl (seconds)：不论你最近是否使用过私钥，只要超过了此值，就需要进行重新验证，默认是30min。</span><br><span class="line">* **可设置长时间，但不建议太长**，还有一种是定期刷新有效时间，但需要配置系统任务容易遗忘所以不推荐。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>default-cache-ttl 1800<br>max-cache-ttl 7200</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">重启 gpg-agent进程：</span><br></pre></td></tr></table></figure><p>echo RELOADAGENT | gpg-connect-agent</p><pre><code></code></pre></li><li><p>提交推送完成后GitHub仍然提示未验证？<br>解决方案：<br>检查本地提交的GIT默认邮箱和GitHub平台的登记邮箱是否一致，不一致可修改当前项目的邮箱保持和GPG一致即可。</p></li><li><p>其他平台如何设置？<br>解决方案：<br>其他GIT在线平台和GitHub操作方法基本一致。</p></li></ul><h4 id="请妥善保存和使用GPG签名密钥，防止敏感文件泄漏！"><a href="#请妥善保存和使用GPG签名密钥，防止敏感文件泄漏！" class="headerlink" title="请妥善保存和使用GPG签名密钥，防止敏感文件泄漏！"></a>请妥善保存和使用GPG签名密钥，防止敏感文件泄漏！</h4>]]></content>
    
    
    <summary type="html">&lt;!-- toc --&gt;

&lt;h4 id=&quot;base-gnupg（version-gt-x3D-2-1-17-版本gnupg已包含gpg-agent）&quot;&gt;&lt;a href=&quot;#base-gnupg（version-gt-x3D-2-1-17-版本gnupg已包含gpg-agent）&quot; class=&quot;headerlink&quot; title=&quot;base gnupg（version &amp;gt;&amp;#x3D; 2.1.17,版本gnupg已包含gpg-agent）&quot;&gt;&lt;/a&gt;base gnupg（version &amp;gt;&amp;#x3D; 2.1.17,版本gnupg已包含gpg-agent）&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;注意事项&lt;/strong&gt;：gpg2默认交互式输入密码，有相应的解决方案。&lt;/p&gt;
&lt;h6 id=&quot;brew-install（推荐）：&quot;&gt;&lt;a href=&quot;#brew-install（推荐）：&quot; class=&quot;headerlink&quot; title=&quot;brew install（推荐）：&quot;&gt;&lt;/a&gt;brew install（推荐）：&lt;/h6&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;brew install gnupg&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h6 id=&quot;版本信息（截至2022-06-19）&quot;&gt;&lt;a href=&quot;#版本信息（截至2022-06-19）&quot; class=&quot;headerlink&quot; title=&quot;版本信息（截至2022.06.19）&quot;&gt;&lt;/a&gt;版本信息（截至2022.06.19）&lt;/h6&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gnupg: stable 2.3.6 (bottled)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GNU Pretty Good Privacy (PGP) package&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;https://gnupg.org/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/usr/local/Cellar/gnupg/2.3.6 (149 files, 13.3MB) *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Poured from bottle on 2022-05-04 at 00:14:15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;From: https://mirrors.ustc.edu.cn/homebrew-core.git/Formula/gnupg.rb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;License: GPL-3.0-or-later&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="GIT" scheme="https://www.defense.ink/categories/GIT/"/>
    
    
    <category term="GIT" scheme="https://www.defense.ink/tags/GIT/"/>
    
    <category term="GPG" scheme="https://www.defense.ink/tags/GPG/"/>
    
    <category term="GPG2" scheme="https://www.defense.ink/tags/GPG2/"/>
    
  </entry>
  
  <entry>
    <title>Hexo cdn.jsdelivr.net A low cost solution for CDN invalidation（Hexo cdn.jsdelivr.net 等部分CDN引用无效的一种低成本解决方案）</title>
    <link href="https://www.defense.ink/bafde551.html"/>
    <id>https://www.defense.ink/bafde551.html</id>
    <published>2022-06-05T21:02:02.000Z</published>
    <updated>2024-02-17T03:35:16.588Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><p>原因：cdn.jsdelivr.net在<code>2021年12月20号</code>国内已经无法使用，导致部分引用此引用此cdn资源的hexo生成站点js依赖和错误页面功能异常。</p><p>临时低成本解决方案：</p><p>考虑到不同的hexo站点使用的插件各有不同，且引用的第三方js库存在差异，故考虑采用低成本的方式解决。大概思路是在生成的部分文件里，替换相应的站点域名，实现在deploy之前完成文件路径的转换。</p><span id="more"></span><p>举例来说，也是本人遇到的问题，常用的js库jsdelivr CDN<code>https://[CDN地址]/npm/js-base64/base64.min.js</code>：</p><p>准备工作(主题icarus为例):</p><ul><li>1.下载对应的无效js文件到本地；</li><li>2.文件放置在(对应创建CDN路径文件夹)<code>themes/icarus/source/npm/js-base64/base64.min.js</code>;</li></ul><p>站点根路径生成常用命令封装了一个简单的操作命令脚本(hexo-deploy.sh)：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env sh</span><br><span class="line"># author: Jack Liu</span><br><span class="line"># Description: (debug | deploy git) script</span><br><span class="line"></span><br><span class="line">if [ &quot;$1&quot; == &quot;debug&quot; ]; then</span><br><span class="line">echo &quot;---------------- Debug Mode ----------------&quot;</span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">exit</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">hexo clean &amp;&amp; hexo g</span><br><span class="line"></span><br><span class="line">echo &quot;---------------- Invalid CDN switch local path file ----------------&quot;</span><br><span class="line"># MacOS下sed和Linux发行版之间的区别，MacOS包含备份保护机制，注意sed -i &#x27;&#x27;</span><br><span class="line">find ./public -name &quot;*.html&quot; -type f -exec sed -i &#x27;&#x27; &#x27;s/\/\/cdn\.jsdelivr\.net\//\//g&#x27; &#x27;&#123;&#125;&#x27; \;</span><br><span class="line"></span><br><span class="line">hexo d</span><br><span class="line">echo &#x27;hexo deploy run is ok !&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>警告：</p><ul><li>脚本包含替换操作！执行脚本前请严格检查命令可行性，防止误操作。 </li><li>MacOS下sed和Linux发行版之间的区别，MacOS包含备份保护机制，注意sed -i ‘’</li></ul><p>执行成功后<code>./public</code>下路径替换会为<code>/npm/js-base64/base64.min.js</code></p><p>备注：<br>其他无效CDN域名引用，参考类似方法，注意sed命令转义。</p>]]></content>
    
    
    <summary type="html">&lt;!-- toc --&gt;

&lt;p&gt;原因：cdn.jsdelivr.net在&lt;code&gt;2021年12月20号&lt;/code&gt;国内已经无法使用，导致部分引用此引用此cdn资源的hexo生成站点js依赖和错误页面功能异常。&lt;/p&gt;
&lt;p&gt;临时低成本解决方案：&lt;/p&gt;
&lt;p&gt;考虑到不同的hexo站点使用的插件各有不同，且引用的第三方js库存在差异，故考虑采用低成本的方式解决。大概思路是在生成的部分文件里，替换相应的站点域名，实现在deploy之前完成文件路径的转换。&lt;/p&gt;</summary>
    
    
    
    <category term="macos" scheme="https://www.defense.ink/categories/macos/"/>
    
    
    <category term="hexo" scheme="https://www.defense.ink/tags/hexo/"/>
    
    <category term="CDN" scheme="https://www.defense.ink/tags/CDN/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript map function grammatical sugar trap</title>
    <link href="https://www.defense.ink/ad4a4750.html"/>
    <id>https://www.defense.ink/ad4a4750.html</id>
    <published>2022-06-05T13:02:00.000Z</published>
    <updated>2024-02-17T03:35:16.587Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><p>Don’t pursue techniques that seem too fancy, or they may backfire<br>(不要追求看似过于花哨的技巧，否则可能适得其反)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let m = [10, 10, 10].map(parseInt);</span><br><span class="line">document.write(m);</span><br></pre></td></tr></table></figure><span id="more"></span><iframe id="cp_embed_KKQYEaL" src="//codepen.io/jql/embed/KKQYEaL?height=result[520]]&theme-id=dark&slug-hash=KKQYEaL&default-tab=[css," scrolling="no" frameborder="no" height="result[520]]" allowtransparency="true" allowfullscreen="true" class="cp_embed_iframe" style="width: 100%; overflow: hidden;"></iframe>]]></content>
    
    
    <summary type="html">&lt;!-- toc --&gt;

&lt;p&gt;Don’t pursue techniques that seem too fancy, or they may backfire&lt;br&gt;(不要追求看似过于花哨的技巧，否则可能适得其反)&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;let m = [10, 10, 10].map(parseInt);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;document.write(m);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="JavaScript" scheme="https://www.defense.ink/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://www.defense.ink/tags/JavaScript/"/>
    
    <category term="JS" scheme="https://www.defense.ink/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>HomeBrew Mirror to accelerate Settings （HomeBrew 镜像加速解决源下载缓慢卡顿问题和超大软件包等待问题）</title>
    <link href="https://www.defense.ink/2dc6af80.html"/>
    <id>https://www.defense.ink/2dc6af80.html</id>
    <published>2022-05-20T22:02:02.000Z</published>
    <updated>2024-02-17T03:35:16.588Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><h4 id="HomeBrew-环境配置以及卡顿问题处理"><a href="#HomeBrew-环境配置以及卡顿问题处理" class="headerlink" title="HomeBrew 环境配置以及卡顿问题处理"></a>HomeBrew 环境配置以及卡顿问题处理</h4><h5 id="关键环境变量配置"><a href="#关键环境变量配置" class="headerlink" title="关键环境变量配置"></a>关键环境变量配置</h5><p>推荐使用清华源镜像替换：<br><a href="https://mirrors.ustc.edu.cn/">https://mirrors.ustc.edu.cn/</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 文件列表(对应以下镜像仓库地址)</span><br><span class="line">homebrew Folder</span><br><span class="line">-------------------------------</span><br><span class="line">homebrew-bottles</span><br><span class="line">homebrew-cask-versions.git</span><br><span class="line">homebrew-cask.git</span><br><span class="line">homebrew-core.git</span><br></pre></td></tr></table></figure><span id="more"></span><p>环境变量替换配置项：<br><code>.bash_profile</code> 或 <code>.zshrc</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">export HOMEBREW_BREW_GIT_REMOTE=&quot;https://mirrors.ustc.edu.cn/brew.git&quot;</span><br><span class="line"></span><br><span class="line">export HOMEBREW_CORE_GIT_REMOTE=&quot;https://mirrors.ustc.edu.cn/homebrew-core.git&quot;</span><br><span class="line"></span><br><span class="line">export HOMEBREW_BOTTLE_DOMAIN=&quot;https://mirrors.ustc.edu.cn/homebrew-bottles/bottles&quot;</span><br><span class="line"></span><br><span class="line"># close brew auto update （是否关闭自动更新，开发环境推荐设置为true，手动更新）</span><br><span class="line">export HOMEBREW_NO_AUTO_UPDATE=true</span><br></pre></td></tr></table></figure><p>软件镜像地址替换：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">替换核心软件仓库</span><br><span class="line">cd &quot;$(brew --repo)/Library/Taps/homebrew/homebrew-core&quot;</span><br><span class="line">git remote set-url origin https://mirrors.ustc.edu.cn/homebrew-core.git</span><br><span class="line"></span><br><span class="line">替换 cask 软件仓库</span><br><span class="line">cd &quot;$(brew --repo)&quot;/Library/Taps/caskroom/homebrew-cask</span><br><span class="line">git remote set-url origin https://mirrors.ustc.edu.cn/homebrew-cask.git</span><br><span class="line"></span><br><span class="line">替换 cask-versions 软件仓库</span><br><span class="line">cd &quot;$(brew --repo)&quot;/Library/Taps/homebrew/homebrew-cask-versions</span><br><span class="line">git remote set-url origin https://mirrors.ustc.edu.cn/homebrew-cask-versions.git</span><br></pre></td></tr></table></figure><h6 id="针对部分官方软件包的下载处理-需要开发经验"><a href="#针对部分官方软件包的下载处理-需要开发经验" class="headerlink" title="针对部分官方软件包的下载处理(需要开发经验)"></a>针对部分官方软件包的下载处理(需要开发经验)</h6><h6 id="关键目录"><a href="#关键目录" class="headerlink" title="关键目录"></a>关键目录</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># HomeBrew 安装源缓存目录：</span><br><span class="line">～/Library/Caches/Homebrew</span><br><span class="line"></span><br><span class="line"># 软件配置目录：</span><br><span class="line">/usr/local/etc</span><br></pre></td></tr></table></figure><p><strong>针对较大低速软件包的处理</strong></p><p>软件安装原理：<br>homebrew-tap源配置的<code>.rb</code>软件源有两个关键字段配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">url &quot;&quot;</span><br><span class="line">sha256 &quot;&quot;</span><br></pre></td></tr></table></figure><p><code>brew install [软件名]</code><br>命令通过sha256校验值在Cache生成对应的类似临时文件(不同软件包有所不同)<code>[sha256]--[软件]-[版本].[文件格式].incomplete</code>，部分软件会在.&#x2F;downloads目录下载完成后文件变成类似<code>[sha256]--[软件名]-[版本].[文件格式]</code>，在上层目录生成软链,执行软件包解压或者转移到应用目录下。</p><p><strong>如果既想使用homebrew管理软件包同时又忍受不了软件长时间的低速下载</strong>，可使</p><p>以上可以通过下方式完成软件包的替换（建议有开发经验人员是用，否则缓存目录可能产生冗余文件）：<br>1.下载指定版本软件包（注意软件版本和对应的sha256值）；<br>2.执行<code>brew install [软件]</code>，记录下临时文件的sha256值和文件名以及版本好；<br>3.将已下载的软件包命名成[sha256]–[软件]-[版本].[文件格式]方式；<br>4.再次执行<code>brew install [软件]</code>，此时成功的话会提示软件已下载完成，直接执行安装操作（如果仍提示下载软件，检查sha256文件名是否符合对应版本的软件包值要求）。</p>]]></content>
    
    
    <summary type="html">&lt;!-- toc --&gt;

&lt;h4 id=&quot;HomeBrew-环境配置以及卡顿问题处理&quot;&gt;&lt;a href=&quot;#HomeBrew-环境配置以及卡顿问题处理&quot; class=&quot;headerlink&quot; title=&quot;HomeBrew 环境配置以及卡顿问题处理&quot;&gt;&lt;/a&gt;HomeBrew 环境配置以及卡顿问题处理&lt;/h4&gt;&lt;h5 id=&quot;关键环境变量配置&quot;&gt;&lt;a href=&quot;#关键环境变量配置&quot; class=&quot;headerlink&quot; title=&quot;关键环境变量配置&quot;&gt;&lt;/a&gt;关键环境变量配置&lt;/h5&gt;&lt;p&gt;推荐使用清华源镜像替换：&lt;br&gt;&lt;a href=&quot;https://mirrors.ustc.edu.cn/&quot;&gt;https://mirrors.ustc.edu.cn/&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 文件列表(对应以下镜像仓库地址)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;homebrew Folder&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;homebrew-bottles&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;homebrew-cask-versions.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;homebrew-cask.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;homebrew-core.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="macos" scheme="https://www.defense.ink/categories/macos/"/>
    
    
    <category term="homebrew" scheme="https://www.defense.ink/tags/homebrew/"/>
    
    <category term="macos" scheme="https://www.defense.ink/tags/macos/"/>
    
  </entry>
  
  <entry>
    <title>clang ANSI lib 标准差异汇总速查</title>
    <link href="https://www.defense.ink/f4ab9929.html"/>
    <id>https://www.defense.ink/f4ab9929.html</id>
    <published>2022-05-05T00:03:02.000Z</published>
    <updated>2024-02-17T03:35:16.582Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><h3 id="C-ANSI-C-语言标准函数库"><a href="#C-ANSI-C-语言标准函数库" class="headerlink" title="C(ANSI C)语言标准函数库"></a>C(ANSI C)语言标准函数库</h3><h4 id="C标准库概述"><a href="#C标准库概述" class="headerlink" title="C标准库概述"></a>C标准库概述</h4><h5 id="基本说明"><a href="#基本说明" class="headerlink" title="基本说明"></a>基本说明</h5><p>从语言本身的角度(与平台无关)来说，标准C语言（ANSI C）共定义了15 个头文件，截至C11标准共包含29个头文件。</p><h4 id="各标准差异："><a href="#各标准差异：" class="headerlink" title="各标准差异："></a>各标准差异：</h4><table><thead><tr><th align="center">标准名称</th><th align="left">头文件差异</th></tr></thead><tbody><tr><td align="center">C89</td><td align="left">15 标准头文件</td></tr><tr><td align="center">C90、C89</td><td align="left">标准头文件无差异, 排版存在差异</td></tr><tr><td align="center">C95</td><td align="left">+3 标准头文件</td></tr><tr><td align="center">C99</td><td align="left">+6 标准头文件</td></tr><tr><td align="center">C11</td><td align="left">+5 标准头文件</td></tr><tr><td align="center">C17</td><td align="left">无</td></tr></tbody></table><span id="more"></span><h5 id="C标准库按使用频度"><a href="#C标准库按使用频度" class="headerlink" title="C标准库按使用频度:"></a>C标准库按使用频度:</h5><p>常用：</p><ul><li><p>一组：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">stdio.h</span><br><span class="line">ctype.h</span><br><span class="line">stdlib.h</span><br><span class="line">string.h</span><br></pre></td></tr></table></figure></li><li><p>二组：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">assert.h</span><br><span class="line">limits.h</span><br><span class="line">stddef.h</span><br><span class="line">time.h</span><br></pre></td></tr></table></figure></li><li><p>三组：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">float.h</span><br><span class="line">math.h</span><br><span class="line">error.h</span><br><span class="line">locale.h</span><br><span class="line">setjmp.h</span><br><span class="line">signal.h</span><br><span class="line">stdarg.h</span><br></pre></td></tr></table></figure></li></ul><h5 id="标准库备注"><a href="#标准库备注" class="headerlink" title="标准库备注"></a>标准库备注</h5><table><thead><tr><th align="center">头文件</th><th align="center">标准版本</th><th align="left">备注</th></tr></thead><tbody><tr><td align="center">assert.h</td><td align="center">C89&#x2F;C90</td><td align="left">条件编译宏，将参数与零比较</td></tr><tr><td align="center">ctype.h</td><td align="center">C89&#x2F;C90</td><td align="left">用于确定包含字符数据中的类型</td></tr><tr><td align="center">errno.h</td><td align="center">C89&#x2F;C90</td><td align="left">报告错误条件宏,内含3个宏(EDOM特定含义的错误，在math.h 中表示域错误;ERANGE特定含义的错误，在math.h 中表示溢出错误;errno库函数中用来盛放错误代码的宏)</td></tr><tr><td align="center">float.h</td><td align="center">C89&#x2F;C90</td><td align="left">浮点数类型,提供范围和精度的宏，包含了一组与浮点值相关的依赖于平台的常量</td></tr><tr><td align="center">limits.h</td><td align="center">C89&#x2F;C90</td><td align="left">检测整型数据数据类型的表达值范围</td></tr><tr><td align="center">locale.h</td><td align="center">C89&#x2F;C90</td><td align="left">本地化</td></tr><tr><td align="center">math.h</td><td align="center">C89&#x2F;C90</td><td align="left">常用数学函数库</td></tr><tr><td align="center">setjmp.h</td><td align="center">C89&#x2F;C90</td><td align="left">非局部跳转</td></tr><tr><td align="center">signal.h</td><td align="center">C89&#x2F;C90</td><td align="left">信号处理</td></tr><tr><td align="center">stdarg.h</td><td align="center">C89&#x2F;C90</td><td align="left">可变参数</td></tr><tr><td align="center">stddef.h</td><td align="center">C89&#x2F;C90</td><td align="left">常用宏定义</td></tr><tr><td align="center">stdio.h</td><td align="center">C89&#x2F;C90</td><td align="left">输入&#x2F;输出</td></tr><tr><td align="center">stdlib.h</td><td align="center">C89&#x2F;C90</td><td align="left">standard library标准库函数库：内存管理、程序工具、字符串转换、随机数</td></tr><tr><td align="center">string.h</td><td align="center">C89&#x2F;C90</td><td align="left">字符串处理</td></tr><tr><td align="center">time.h</td><td align="center">C89&#x2F;C90</td><td align="left">时间处理</td></tr><tr><td align="center">wchar.h</td><td align="center">C95</td><td align="left">扩展多字节和宽字符处理</td></tr><tr><td align="center">wctype.h</td><td align="center">C95</td><td align="left">包含了一系列用于检测和转换单个宽字符的函数库，wctype.h 是ctype.h的宽字符版本，wctype.h的出现晚于ctype.h。wctype.h的引入使C语言可以更好地处理英文以外的语言。</td></tr><tr><td align="center">complex.h</td><td align="center">C99</td><td align="left">复数运算</td></tr><tr><td align="center">fenv.h</td><td align="center">C99</td><td align="left">浮点数环境</td></tr><tr><td align="center">inttypes.h</td><td align="center">C99</td><td align="left">整数类型的格式转换</td></tr><tr><td align="center">stdbool.h</td><td align="center">C99</td><td align="left">布尔类型</td></tr><tr><td align="center">stdint.h</td><td align="center">C99</td><td align="left">定宽整数类型</td></tr><tr><td align="center">tgmath.h</td><td align="center">C99</td><td align="left">泛型数学（包装 math.h 和 complex.h 的宏）</td></tr><tr><td align="center">stdalign.h</td><td align="center">C11</td><td align="left">alignas 与 alignof 便利宏</td></tr><tr><td align="center">stdatomic.h</td><td align="center">C11</td><td align="left">原子类型</td></tr><tr><td align="center">stdnoreturn.h</td><td align="center">C11</td><td align="left">noreturn 便利宏</td></tr><tr><td align="center">threads.h</td><td align="center">C11</td><td align="left">线程库</td></tr><tr><td align="center">uchar.h</td><td align="center">C11</td><td align="left">UTF-16 和 UTF-32 字符工具</td></tr></tbody></table><h4 id="运行时库"><a href="#运行时库" class="headerlink" title="运行时库"></a>运行时库</h4><h5 id="C-run-time-library（CRT）"><a href="#C-run-time-library（CRT）" class="headerlink" title="C run-time library（CRT）"></a>C run-time library（CRT）</h5><ul><li>C运行时库区别于C++语言的运行时库，指的是C程序运行时需要调用的库的函数，是一个相对概念</li><li>C运行时库由编译器生产商提供，亦称为第三方 C 运行库（Third party C run-time libraries）</li><li>C运行时库一般是平台或系统提供，windows或linux，macos等。</li></ul><h5 id="Universal-C-Runtime-库（UCRT-库）"><a href="#Universal-C-Runtime-库（UCRT-库）" class="headerlink" title="Universal C Runtime 库（UCRT 库）"></a>Universal C Runtime 库（UCRT 库）</h5><p>通用C运行时库，包含多C库的头文件，Windows组件之一，自win10开始以系统发行方式部分提供。关联库：</p><ul><li>对应的lib库为libucrt.lib</li><li>对应的dll库为ucrtbase.dll</li></ul><p>UCRT库文件：</p><table><thead><tr><th align="center">库</th><th align="center">关联的DLL</th><th align="center">备注</th><th align="center">选项</th><th align="center">预处理器指令</th></tr></thead><tbody><tr><td align="center">libucrt.lib</td><td align="center">无</td><td align="center">将 UCRT 静态链接到你的代码。</td><td align="center">&#x2F;MT</td><td align="center">_MT</td></tr><tr><td align="center">libucrtd.lib</td><td align="center">无</td><td align="center">用于静态链接的 UCRT 调试版本。不可再发行。</td><td align="center">&#x2F;MTd</td><td align="center">_DEBUG,_MT</td></tr><tr><td align="center">ucrt.lib</td><td align="center">ucrtbase.dll</td><td align="center">UCRT 的 DLL 导入库。</td><td align="center">&#x2F;MD</td><td align="center">_MT,_DLL</td></tr><tr><td align="center">ucrtd.lib</td><td align="center">ucrtbased.dll</td><td align="center">UCRT 调试版本的 DLL 导入库。不可再发行。</td><td align="center">&#x2F;MDd</td><td align="center">_DEBUG,_MT,_DLL</td></tr></tbody></table><h5 id="标准库和运行时库的区别"><a href="#标准库和运行时库的区别" class="headerlink" title="标准库和运行时库的区别"></a>标准库和运行时库的区别</h5><ul><li>C标准库再跨平台系统上，执行结果一致</li><li>C运行库是C标准库的扩展集，完全包含C标准库，但扩展的函数因不同的操作系统平台有差异</li><li>不同的操作系统，c运行时库执行的结果可能不同，但是对c标准库的支持是完全一致</li></ul>]]></content>
    
    
    <summary type="html">&lt;!-- toc --&gt;


&lt;h3 id=&quot;C-ANSI-C-语言标准函数库&quot;&gt;&lt;a href=&quot;#C-ANSI-C-语言标准函数库&quot; class=&quot;headerlink&quot; title=&quot;C(ANSI C)语言标准函数库&quot;&gt;&lt;/a&gt;C(ANSI C)语言标准函数库&lt;/h3&gt;&lt;h4 id=&quot;C标准库概述&quot;&gt;&lt;a href=&quot;#C标准库概述&quot; class=&quot;headerlink&quot; title=&quot;C标准库概述&quot;&gt;&lt;/a&gt;C标准库概述&lt;/h4&gt;&lt;h5 id=&quot;基本说明&quot;&gt;&lt;a href=&quot;#基本说明&quot; class=&quot;headerlink&quot; title=&quot;基本说明&quot;&gt;&lt;/a&gt;基本说明&lt;/h5&gt;&lt;p&gt;从语言本身的角度(与平台无关)来说，标准C语言（ANSI C）共定义了15 个头文件，截至C11标准共包含29个头文件。&lt;/p&gt;
&lt;h4 id=&quot;各标准差异：&quot;&gt;&lt;a href=&quot;#各标准差异：&quot; class=&quot;headerlink&quot; title=&quot;各标准差异：&quot;&gt;&lt;/a&gt;各标准差异：&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;center&quot;&gt;标准名称&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;头文件差异&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;C89&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;15 标准头文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;C90、C89&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;标准头文件无差异, 排版存在差异&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;C95&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;+3 标准头文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;C99&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;+6 标准头文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;C11&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;+5 标准头文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;C17&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;无&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;</summary>
    
    
    
    <category term="clang" scheme="https://www.defense.ink/categories/clang/"/>
    
    
    <category term="clang" scheme="https://www.defense.ink/tags/clang/"/>
    
    <category term="ansi-lib" scheme="https://www.defense.ink/tags/ansi-lib/"/>
    
  </entry>
  
  <entry>
    <title>clang io format</title>
    <link href="https://www.defense.ink/5fc261d7.html"/>
    <id>https://www.defense.ink/5fc261d7.html</id>
    <published>2022-05-05T00:02:06.000Z</published>
    <updated>2024-02-17T03:35:16.581Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><h3 id="输入输出格式化"><a href="#输入输出格式化" class="headerlink" title="输入输出格式化"></a>输入输出格式化</h3><h4 id="终端输入-input"><a href="#终端输入-input" class="headerlink" title="终端输入 input"></a>终端输入 input</h4><p>键盘获取输入(三个函数)：</p><ul><li>scanf()：和 printf() 类似，scanf() 可以输入多种类型的数据。</li><li>getchar()、getche()、getch()：这三个函数都用于输入单个字符。</li><li>gets()：获取一行数据，并作为字符串处理。<span id="more"></span>scanf()默认以空格分割：<ul><li>scanf() 在读取数据时需要的是数据的地址，字符串名字或者数组名字在使用的过程中自动会转换为内存地址，所以无需加&amp;</li><li>int、char、float 等类型的变量用于 scanf() 时都要在前面添加&amp;，而数组或者字符串用于 scanf() 时不用添加&amp;，它们本身就会转换为地址。</li><li>scanf() 可以读取带空格的字符串，字符的数目，指定的字符，不读取某些字符，丢弃字符。</li></ul></li></ul><h4 id="终端输出-output"><a href="#终端输出-output" class="headerlink" title="终端输出 output"></a>终端输出 output</h4><p>三个函数可以用来在显示器终端输出数据：</p><ul><li><code>puts()</code>：仅输出字符串，并且输出结束后会自动换行</li><li><code>putchar()</code>：仅输出单个字符</li><li><code>printf()</code>：可以输出各种类型的数据</li></ul><h4 id="printf-缓存机制"><a href="#printf-缓存机制" class="headerlink" title="printf()缓存机制"></a>printf()缓存机制</h4><p>printf() 输出延迟问题：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">printf(&quot;输出1&quot;);</span><br><span class="line"></span><br><span class="line">//sleep() 是 Linux 和 Mac OS 下特有的函数，Sleep()是Windows函数</span><br><span class="line">sleep(2);  // 延迟2s</span><br><span class="line"></span><br><span class="line">printf(&quot;输出2&quot;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>本质上printf() 执行结束以后数据并没有直接输出到显示器上，而是放入了<strong>缓冲区</strong>，输出缓冲区直到遇见换行符\n才将缓冲区中的数据输出到显示器上（Linux 或者 Mac OS 下运行）<br><strong>对缓存的理解，是处理C语言各种疑难问题的重要思路和方向。</strong></p>]]></content>
    
    
    <summary type="html">&lt;!-- toc --&gt;


&lt;h3 id=&quot;输入输出格式化&quot;&gt;&lt;a href=&quot;#输入输出格式化&quot; class=&quot;headerlink&quot; title=&quot;输入输出格式化&quot;&gt;&lt;/a&gt;输入输出格式化&lt;/h3&gt;&lt;h4 id=&quot;终端输入-input&quot;&gt;&lt;a href=&quot;#终端输入-input&quot; class=&quot;headerlink&quot; title=&quot;终端输入 input&quot;&gt;&lt;/a&gt;终端输入 input&lt;/h4&gt;&lt;p&gt;键盘获取输入(三个函数)：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scanf()：和 printf() 类似，scanf() 可以输入多种类型的数据。&lt;/li&gt;
&lt;li&gt;getchar()、getche()、getch()：这三个函数都用于输入单个字符。&lt;/li&gt;
&lt;li&gt;gets()：获取一行数据，并作为字符串处理。&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="clang" scheme="https://www.defense.ink/categories/clang/"/>
    
    
    <category term="clang" scheme="https://www.defense.ink/tags/clang/"/>
    
    <category term="io" scheme="https://www.defense.ink/tags/io/"/>
    
    <category term="format" scheme="https://www.defense.ink/tags/format/"/>
    
  </entry>
  
  <entry>
    <title>clang macro</title>
    <link href="https://www.defense.ink/c603c446.html"/>
    <id>https://www.defense.ink/c603c446.html</id>
    <published>2022-05-05T00:02:02.000Z</published>
    <updated>2024-02-17T03:35:16.582Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><h3 id="C-Macro-宏"><a href="#C-Macro-宏" class="headerlink" title="C Macro 宏"></a>C Macro 宏</h3><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><p>#define 宏定义命令，C语言预处理命令。标识符来表示一个字符串，代码运行中会将表示符进行全部替换成指定的字符串。</p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#define N 1</span><br><span class="line">int main()&#123;</span><br><span class="line">    int sum = 1 + N;</span><br><span class="line">    printf(&quot;Output: %d\n&quot;, sum);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line">// output: 2</span><br></pre></td></tr></table></figure><h4 id="宏定义和定义全局变量的区别和注意事项"><a href="#宏定义和定义全局变量的区别和注意事项" class="headerlink" title="宏定义和定义全局变量的区别和注意事项"></a>宏定义和定义全局变量的区别和注意事项</h4><ul><li>作用时间不同：宏定义在编译期间即会使用并替换，而全局变量要到运行时才可以。 </li><li>本质类型不同：<ul><li>宏定义的只是一段字符，在编译的时候被替换到引用的位置。<br>在运行中是没有宏定义的概念的。而变量在运行时要为其分配内存。 </li><li>宏定义不可以被赋值，即其值一旦定义不可修改，而变量在运行过程中可以被修改。</li></ul></li><li>宏定义只有在定义所在文件，或引用所在文件的其它文件中使用。<br>全局变量可以在工程所有文件中使用，只需在使用前加一个声明就可以，即宏定义不支持extern模式。</li></ul>]]></content>
    
    
    <summary type="html">&lt;!-- toc --&gt;



&lt;h3 id=&quot;C-Macro-宏&quot;&gt;&lt;a href=&quot;#C-Macro-宏&quot; class=&quot;headerlink&quot; title=&quot;C Macro 宏&quot;&gt;&lt;/a&gt;C Macro 宏&lt;/h3&gt;&lt;h4 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h4&gt;&lt;p&gt;#define 宏定义命令，C语言预处理命令。标识符来表示一个字符串，代码运行中会将表示符进行全部替换成指定的字符串。&lt;/p&gt;</summary>
    
    
    
    <category term="clang" scheme="https://www.defense.ink/categories/clang/"/>
    
    
    <category term="clang" scheme="https://www.defense.ink/tags/clang/"/>
    
    <category term="macro" scheme="https://www.defense.ink/tags/macro/"/>
    
  </entry>
  
  <entry>
    <title>clang Data Type</title>
    <link href="https://www.defense.ink/8ed5dc39.html"/>
    <id>https://www.defense.ink/8ed5dc39.html</id>
    <published>2022-05-05T00:02:00.000Z</published>
    <updated>2024-02-17T03:35:16.581Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><h3 id="clang-Data-Type"><a href="#clang-Data-Type" class="headerlink" title="clang Data Type"></a>clang Data Type</h3><h4 id="C语言’-0’的含义"><a href="#C语言’-0’的含义" class="headerlink" title="C语言’\0’的含义"></a>C语言’\0’的含义</h4><ul><li>\0 是判定字符数组结束的标识</li><li>\0 表示的是ASCII控制字符中空字符的含义，<strong>代码为NUL，非NULL</strong></li><li>\0 本身占一个位置</li><li>\0 在数组中占有空间但不显性<span id="more"></span><h3 id="NUL和NULL的区别"><a href="#NUL和NULL的区别" class="headerlink" title="NUL和NULL的区别"></a>NUL和NULL的区别</h3></li><li>NUL 是ASCII 字符集中 ‘\0’ 字符的名字，它的字节模式为全 0。NULL 指一个其值为 0 的指针。它们都是整型值，其值也相同，所以它们可以互换使用。</li><li>符号 NULL 在头文件 stdio.h 中定义。另一方面，并不存在预定义的符号 NUL。</li><li>NULL 指针并不指向任何对象。除非是用于赋值或比较运算，出于其他任何目的的使用NULL指针都是非法的。</li></ul><p>NULL是一个宏，它在几个标准头文件中定义，0是一个整型常量，’\0’是一个字符常量，而NUL是一个字符常量的名字。术语都不可互换。</p><ul><li>1、NULL就是空指针</li><li>2、0可以被用于任何地方，它是表示各种类型零值的符号并且编译器会挑出它</li><li>3、’\0’应该只被用于结束字符串</li><li>4、NUL没有被定义于C和C++，它不应该被使用，除非你自己定义它，像：#define nul ‘\0’</li></ul><p>空指针的用法 ：</p><ul><li>用空指针终止对递归数据结构的间接引用 </li><li>用空指针作函数调用失败时的返回值 </li><li>用空指针作警戒值</li></ul><h4 id="加减乘除运算"><a href="#加减乘除运算" class="headerlink" title="加减乘除运算"></a>加减乘除运算</h4><p>简写方式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">int a = 1, b = 2;</span><br><span class="line">a += 1;  // a = a + 1;</span><br><span class="line">a *= (b-1);  // a = a * (b-1);</span><br><span class="line">a -= (a+2);  // a = a - (a+2);</span><br></pre></td></tr></table></figure><p>特殊简写(自加或自增: ++ 和 – 自增运算符和自减运算符)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// a = a + 1</span><br><span class="line">a++;</span><br><span class="line"></span><br><span class="line">// a = a + 1</span><br><span class="line">++a;</span><br></pre></td></tr></table></figure><p>前自增和后自增区别：</p><ul><li>++ 在前面叫做前自增</li><li>++ 在后面叫做后自增</li><li>– 在前面叫做前自减</li><li>– 在后面叫做后自减<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">int a = 1, b = 2;</span><br><span class="line">int a1 = ++a, b1 = b++;</span><br><span class="line">   </span><br><span class="line">printf(&quot;a=%d, a1=%d\n&quot;, a, a1);</span><br><span class="line"></span><br><span class="line">// 注意事项：b1=b++，b 值先赋值 b1，然后再加 1。</span><br><span class="line">printf(&quot;b=%d, b1=%d\n&quot;, b, b1);</span><br><span class="line"></span><br><span class="line">//综合操作</span><br><span class="line">int a = 2, b = 1;</span><br><span class="line">int c = a - (b--);  // 后自减，会先进行a-b运算，结果是 1，然后 b 再自减，就变成了 0；最后再将a-b的结果（也就是1）交给 c，所以 c 的值是 1。</span><br><span class="line">int d = (++a) - (--b); //b 的值已经变成 0。对于d=(++a)-(--b)，a 会先自增，变成 3，然后 b 再自减，变成 -1，最后再计算3-(-1)，结果是 4，交给 d，所以 d 最终是 4。</span><br><span class="line">printf(&quot;c=%d, d=%d\n&quot;, c, d);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><p>注意事项：</p><p>1.C语言中的除法运算,类型注意事项：</p><ul><li>**当除数和被除数都是整数时，运算结果也是整数；非整除则直接丢掉小数部分只保留整数部分，与小数赋值给整数类型同理。</li><li>除数和被除数中如含有小数，那么运算结果也是小数，double 类型小数。</li></ul><p>2.取余注意事项：</p><ul><li>C语言中的取余运算 % 的两边都必须是整数，小数非法，否则编译器报错。<br>余数可以是正数也可以是负数，由 % 左边的整数决定：<br>如果 % 左边是正数，那么余数也是正数；如果 % 左边是负数，那么余数也是负数</li></ul>]]></content>
    
    
    <summary type="html">&lt;!-- toc --&gt;


&lt;h3 id=&quot;clang-Data-Type&quot;&gt;&lt;a href=&quot;#clang-Data-Type&quot; class=&quot;headerlink&quot; title=&quot;clang Data Type&quot;&gt;&lt;/a&gt;clang Data Type&lt;/h3&gt;&lt;h4 id=&quot;C语言’-0’的含义&quot;&gt;&lt;a href=&quot;#C语言’-0’的含义&quot; class=&quot;headerlink&quot; title=&quot;C语言’\0’的含义&quot;&gt;&lt;/a&gt;C语言’\0’的含义&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;\0 是判定字符数组结束的标识&lt;/li&gt;
&lt;li&gt;\0 表示的是ASCII控制字符中空字符的含义，&lt;strong&gt;代码为NUL，非NULL&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;\0 本身占一个位置&lt;/li&gt;
&lt;li&gt;\0 在数组中占有空间但不显性&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="clang" scheme="https://www.defense.ink/categories/clang/"/>
    
    
    <category term="clang" scheme="https://www.defense.ink/tags/clang/"/>
    
    <category term="type" scheme="https://www.defense.ink/tags/type/"/>
    
  </entry>
  
  <entry>
    <title>常用GUI库</title>
    <link href="https://www.defense.ink/8ee4d6e3.html"/>
    <id>https://www.defense.ink/8ee4d6e3.html</id>
    <published>2022-05-04T22:02:02.000Z</published>
    <updated>2024-02-17T03:35:16.581Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><h3 id="常用GUI库"><a href="#常用GUI库" class="headerlink" title="常用GUI库"></a>常用GUI库</h3><h4 id="X协议"><a href="#X协议" class="headerlink" title="X协议"></a>X协议</h4><ul><li>X Window System(X11)，第11个版本。</li><li>下一代改进协议Wayland，Wayland不仅仅是要完全取代X11，取代目前Linux桌面上X Client&#x2F;X Server的设计理念。<span id="more"></span><strong>注意事项：</strong><br>截至2020年大多数用于Linux的视频游戏和图形密集型应用程序仍为X11编写。但许多封闭源代码的图形驱动程序，例NVIDIA GPU的驱动程序都尚未完全提供对Wayland的支持。</li></ul><h5 id="X-协议由-X-server-和-X-client-组成："><a href="#X-协议由-X-server-和-X-client-组成：" class="headerlink" title="X 协议由 X server 和 X client 组成："></a>X 协议由 X server 和 X client 组成：</h5><ul><li><p>X server 管理主机上与显示相关的硬件设备，它负责屏幕画面的绘制与显示，以及将输入设备的动作告知 X client。</p></li><li><p>X client 应用程序端则主要负责事件的处理（程序的逻辑）。</p></li><li><p>Linux&#x2F;Unix类操作系统上, <code>$DISPLAY</code>设置图形显示出处.</p></li></ul><pre class="mermaid">graph LR    A[X clients]--->B[Xlib来封装协议];    B--->C[X server];    C--->D[QT]    C--->E[GTK]</pre><p>X clients 了Xlib来封装协议；Xlib不够方便，于是就有了qt和gtk，提供了很多窗口控件（widgets）</p><h4 id="X和XFree86"><a href="#X和XFree86" class="headerlink" title="X和XFree86"></a>X和XFree86</h4><ul><li>XFree86基于X协议实现免费X服务器软件</li><li>X Window System(X11)，第11个版本</li><li>X11R6 实际上是 X Protocol version 11 Release 6(X协议第11版第六次发行)</li></ul><p>X和XFree86：</p><pre class="mermaid">graph TD    A[X协议]--->B[免费]    A[X协议]--->C[商用]    B--->D[xorg]    B--->E[Xfree86]    B--->F[Wayland]    C--->G[MOTIF]</pre><p>XFree86只是实现X协议的一个免费X服务器软件.商业上常用MOTIF,现在还有XORG</p>]]></content>
    
    
    <summary type="html">&lt;!-- toc --&gt;


&lt;h3 id=&quot;常用GUI库&quot;&gt;&lt;a href=&quot;#常用GUI库&quot; class=&quot;headerlink&quot; title=&quot;常用GUI库&quot;&gt;&lt;/a&gt;常用GUI库&lt;/h3&gt;&lt;h4 id=&quot;X协议&quot;&gt;&lt;a href=&quot;#X协议&quot; class=&quot;headerlink&quot; title=&quot;X协议&quot;&gt;&lt;/a&gt;X协议&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;X Window System(X11)，第11个版本。&lt;/li&gt;
&lt;li&gt;下一代改进协议Wayland，Wayland不仅仅是要完全取代X11，取代目前Linux桌面上X Client&amp;#x2F;X Server的设计理念。&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="clang" scheme="https://www.defense.ink/categories/clang/"/>
    
    
    <category term="clang" scheme="https://www.defense.ink/tags/clang/"/>
    
    <category term="GUI" scheme="https://www.defense.ink/tags/GUI/"/>
    
  </entry>
  
  <entry>
    <title>Proverbs from @rob_pike&#39;s inspiring talk at Gopherfest SV 2015 (video)</title>
    <link href="https://www.defense.ink/5978836a.html"/>
    <id>https://www.defense.ink/5978836a.html</id>
    <published>2022-05-01T13:02:00.000Z</published>
    <updated>2024-02-17T03:35:16.586Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><h1>Go Proverbs</h1><h2>Simple, Poetic, Pithy</h2><h3><a href="https://www.youtube.com/watch?v=PAAkCSZUG1c&t=2m48s">Don't communicate by sharing memory, share memory by communicating.</a></h3><span id="more"></span><h3><a href="https://www.youtube.com/watch?v=PAAkCSZUG1c&t=3m42s">Concurrency is not parallelism.</a></h3><h3><a href="https://www.youtube.com/watch?v=PAAkCSZUG1c&t=4m20s">Channels orchestrate; mutexes serialize.</a></h3><h3><a href="https://www.youtube.com/watch?v=PAAkCSZUG1c&t=5m17s">The bigger the interface, the weaker the abstraction.</a></h3><h3><a href="https://www.youtube.com/watch?v=PAAkCSZUG1c&t=6m25s">Make the zero value useful.</a></h3><h3><a href="https://www.youtube.com/watch?v=PAAkCSZUG1c&t=7m36s">interface{} says nothing.</a></h3><h3><a href="https://www.youtube.com/watch?v=PAAkCSZUG1c&t=8m43s">Gofmt's style is no one's favorite, yet gofmt is everyone's favorite.</a></h3><h3><a href="https://www.youtube.com/watch?v=PAAkCSZUG1c&t=9m28s">A little copying is better than a little dependency.</a></h3><h3><a href="https://www.youtube.com/watch?v=PAAkCSZUG1c&t=11m10s">Syscall must always be guarded with build tags.</a></h3><h3><a href="https://www.youtube.com/watch?v=PAAkCSZUG1c&t=11m53s">Cgo must always be guarded with build tags.</a></h3><h3><a href="https://www.youtube.com/watch?v=PAAkCSZUG1c&t=12m37s">Cgo is not Go.</a></h3><h3><a href="https://www.youtube.com/watch?v=PAAkCSZUG1c&t=13m49s">With the unsafe package there are no guarantees.</a></h3><h3><a href="https://www.youtube.com/watch?v=PAAkCSZUG1c&t=14m35s">Clear is better than clever.</a></h3><h3><a href="https://www.youtube.com/watch?v=PAAkCSZUG1c&t=15m22s">Reflection is never clear.</a></h3><h3><a href="https://www.youtube.com/watch?v=PAAkCSZUG1c&t=16m13s">Errors are values.</a></h3><h3><a href="https://www.youtube.com/watch?v=PAAkCSZUG1c&t=17m25s">Don't just check errors, handle them gracefully.</a></h3><h3><a href="https://www.youtube.com/watch?v=PAAkCSZUG1c&t=18m09s">Design the architecture, name the components, document the details.</a></h3><h3><a href="https://www.youtube.com/watch?v=PAAkCSZUG1c&t=19m07s">Documentation is for users.</a></h3><h3><a href="https://github.com/golang/go/wiki/CodeReviewComments#dont-panic">Don't panic.</a></h3><div class="footer">    <p>Proverbs from <a href="https://twitter.com/rob_pike">@rob_pike</a>'s inspiring     <a href="https://www.youtube.com/watch?v=PAAkCSZUG1c">talk at Gopherfest SV 2015 (video)</a>.</p>    <p>The Gopher character is based on the Go mascot designed by Renée French and copyrighted under the    Creative Commons Attribution 3.0 license.</p>    <p>These proverbs are the basis of a <a href="https://www.youtube.com/watch?v=PAAkCSZUG1c">talk</a> by Rob Pike and the list may be updated when he next gives the talk.</p>    <p>Please read the <a href="https://github.com/go-proverbs/go-proverbs.github.io/blob/master/CONTRIBUTING.md">contribution guidelines</a> before opening an <a href="https://github.com/go-proverbs/go-proverbs.github.io/issues">issue</a> to nominate a new proverb.</p></div>]]></content>
    
    
    <summary type="html">&lt;!-- toc --&gt;


&lt;h1&gt;Go Proverbs&lt;/h1&gt;
&lt;h2&gt;Simple, Poetic, Pithy&lt;/h2&gt;
&lt;h3&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=PAAkCSZUG1c&amp;t=2m48s&quot;&gt;Don&#39;t communicate by sharing memory, share memory by communicating.&lt;/a&gt;&lt;/h3&gt;</summary>
    
    
    
    <category term="Go" scheme="https://www.defense.ink/categories/Go/"/>
    
    
    <category term="Go" scheme="https://www.defense.ink/tags/Go/"/>
    
    <category term="go" scheme="https://www.defense.ink/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>php laravel artisan 基础命令</title>
    <link href="https://www.defense.ink/4b985e6d.html"/>
    <id>https://www.defense.ink/4b985e6d.html</id>
    <published>2021-05-05T10:03:02.000Z</published>
    <updated>2024-02-17T03:35:16.589Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><h4 id="php-artisan-常用命令"><a href="#php-artisan-常用命令" class="headerlink" title="php artisan 常用命令"></a>php artisan 常用命令</h4><p>php artisan 常用命令,注意一些版本差异。</p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">命令  说明  备注</span><br><span class="line">php artisan make:resource [parameter] 创建api返回格式化资源    &gt;=5.4版本可用</span><br><span class="line">php artisan make:rule [parameter] 创建validate规则    &gt;=5.4版本可用</span><br><span class="line">php artisan make:exception [parameter]    创建异常类   &gt;=5.4版本可用</span><br><span class="line">php artisan make:factory [parameter]  创建工厂类   &gt;=5.4版本可用</span><br><span class="line">php artisan package:discover    重置包的缓存信息    &gt;=5.4版本可用</span><br><span class="line">php artisan storage:link [parameter]  Create a symbolic link from &quot;public/storage&quot; to &quot;storage/app/public&quot;    &gt;=5.4版本可用</span><br><span class="line">php artisan view:clear  清楚所有已编译的视图文件    &gt;=5.4版本可用</span><br><span class="line"> </span><br><span class="line">命令  说明  备注</span><br><span class="line">php artisan clear-compiled  清除编译后的类文件   </span><br><span class="line">php artisan down    使应用程序进入维修模式 </span><br><span class="line">php artisan up  退出应用程序的维护模式 </span><br><span class="line">php artisan env 显示当前框架环境    </span><br><span class="line">php artisan fresh   清除包含框架外的支架  </span><br><span class="line">php artisan help    显示命令行的帮助    </span><br><span class="line">php artisan list    列出命令    </span><br><span class="line">php artisan migrate 运行数据库迁移 </span><br><span class="line">php artisan env 显示当前框架环境    </span><br><span class="line">php artisan optimize    为了更好的框架去优化性能    </span><br><span class="line">php artisan serve   在php开发服务器中服务这个应用    --port 8080，--host 0.0.0.0</span><br><span class="line">php artisan tinker  在应用中交互  </span><br><span class="line">php artisan app:name [parameter]  设置应用程序命名空间</span><br><span class="line">php artisan auth:clear-resets   清除过期的密码重置密钥 未使用过</span><br><span class="line">php artisan cache:clear 清除应用程序缓存    </span><br><span class="line">php artisan cache:table 创建一个缓存数据库表的迁移   </span><br><span class="line">php artisan config:cache    创建一个加载配置的缓存文件   </span><br><span class="line">php artisan config:clear    删除配置的缓存文件   </span><br><span class="line">php artisan db:seed 数据库生成模拟数据   </span><br><span class="line">php artisan event:generate  生成event和listen  需要实现配置eventserviceprivoder</span><br><span class="line">php artisan make:command [parameter]  创建一个新的命令处理程序类   </span><br><span class="line">php artisan make:console [parameter]  生成一个Artisan命令   </span><br><span class="line">php artisan key:generate    设置程序密钥  </span><br><span class="line">php artisan make:controller [parameter]   生成一个资源控制类   </span><br><span class="line">php artisan make:middleware [parameter]   生成一个中间件 </span><br><span class="line">php artisan make:migration [parameter]    生成一个迁移文件    </span><br><span class="line">php artisan make:model [parameter]    生成一个Eloquent 模型类    </span><br><span class="line">php artisan make:provider [parameter] 生成一个服务提供商的类 </span><br><span class="line">php artisan make:request [parameter]  生成一个表单消息类   </span><br><span class="line">php artisan migrate:install [parameter]   创建一个迁移库文件   </span><br><span class="line">php artisan make:migration [parameter]    生成一个迁移文件    </span><br><span class="line">php artisan migrate:refresh [parameter]   复位并重新运行所有的迁移    </span><br><span class="line">php artisan migrate:reset [parameter] 回滚全部数据库迁移   </span><br><span class="line">php artisan migrate:rollback [parameter]  回滚最后一个数据库迁移 </span><br><span class="line">php artisan migrate:status  显示列表的迁移 </span><br><span class="line">php artisan queue:failed    列出全部失败的队列工作 </span><br><span class="line">php artisan queue:failed-table [parameter]    创建一个迁移的失败的队列数据库工作表  </span><br><span class="line">php artisan queue:flush 清除全部失败的队列工作 </span><br><span class="line">php artisan queue:forget [parameter]  删除一个失败的队列工作 </span><br><span class="line">php artisan queue:listen [parameter]  监听一个确定的队列工作</span><br><span class="line">php artisan queue:restart   重启现在正在运行的所有队列工作 </span><br><span class="line">php artisan queue:retry 重试一个失败的队列工作 </span><br><span class="line">php artisan queue:subscribe 订阅URL,放到队列上 </span><br><span class="line">php artisan queue:table 创建一个迁移的队列数据库工作表 </span><br><span class="line">php artisan queue:work  进行下一个队列任务</span><br><span class="line">php artisan route:cache 为了更快的路由登记，创建一个路由缓存文件    </span><br><span class="line">php artisan route:clear 清除路由缓存文件    </span><br><span class="line">php artisan route:list  列出全部的注册路由   </span><br><span class="line">php artisan schedule:run    运行预定命令  </span><br><span class="line">php artisan session:table   创建一个迁移的SESSION数据库工作表    </span><br><span class="line">php artisan vendor:publish  发表一些可以发布的有用的资源来自提供商的插件包 </span><br><span class="line">baum包命令</span><br><span class="line">命令  说明  备注</span><br><span class="line">php artisan baum    Get Baum version notice.    </span><br><span class="line">php artisan baum:install [parameter]  Scaffolds a new migration and model suitable for Baum </span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;!-- toc --&gt;


&lt;h4 id=&quot;php-artisan-常用命令&quot;&gt;&lt;a href=&quot;#php-artisan-常用命令&quot; class=&quot;headerlink&quot; title=&quot;php artisan 常用命令&quot;&gt;&lt;/a&gt;php artisan 常用命令&lt;/h4&gt;&lt;p&gt;php artisan 常用命令,注意一些版本差异。&lt;/p&gt;</summary>
    
    
    
    <category term="php" scheme="https://www.defense.ink/categories/php/"/>
    
    
    <category term="php" scheme="https://www.defense.ink/tags/php/"/>
    
    <category term="laravel" scheme="https://www.defense.ink/tags/laravel/"/>
    
    <category term="laravel-artisan" scheme="https://www.defense.ink/tags/laravel-artisan/"/>
    
    <category term="cli" scheme="https://www.defense.ink/tags/cli/"/>
    
  </entry>
  
</feed>
